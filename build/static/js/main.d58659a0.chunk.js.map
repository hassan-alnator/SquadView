{"version":3,"sources":["reducers/index.js","reducers/token.js","reducers/employees.js","helpers/Api.js","components/Employee.js","components/Team.js","App.js","actions/token.js","actions/employees.js","index.js"],"names":["combineReducers","token","action","type","payload","employees","fetchToken","setToken","a","axios","post","identifier","password","resp","console","log","data","jwt","error","fetchEmployees","headers","Authorization","get","itemSource","beginDrag","props","item","endDrag","monitor","didDrop","handleDrop","id","DragSource","connect","connectDragSource","dragSource","isDragging","employee","Name","Team","DragDropContext","HTML5Backend","dispatch","useDispatch","useSelector","state","useEffect","api","store","getState","map","key","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"0LAGeA,4BAAgB,CAC7BC,MCJa,WAAyB,IAAxBA,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,MACO,UADCA,EAAOC,KAEJD,EAAOE,QAEPH,GDAXI,UELa,WAA6B,IAA5BA,EAA2B,uDAAf,GAAIH,EAAW,uCACzC,MACO,cADCA,EAAOC,KAEJD,EAAOE,QAGPC,K,wCCJPC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEIC,IAAMC,KAAK,oCAAqC,CACjEC,WAAY,kBACZC,SAAU,iBAJG,cAETC,EAFS,OAMfC,QAAQC,IAAIF,EAAKG,KAAKC,IAAK,SANZ,kBAORJ,EAAKG,KAAKC,KAPF,uCASfH,QAAQI,MAAR,MATe,kBAUR,IAVQ,yDAAH,sDAcVC,EAAc,uCAAG,WAAOlB,GAAP,iBAAAO,EAAA,4DACL,mCACVY,EAAU,CAAEC,cAAe,UAAYpB,GAFxB,kBAIAQ,IAAMa,IAHX,mCAGwB,CACpCF,QAASA,IALQ,cAIbP,EAJa,yBAQZA,EAAKG,MARO,uCAUnBF,QAAQI,MAAR,MAVmB,kBAWZ,IAXY,yDAAH,sD,QCZdK,EAAa,CACjBC,UADiB,SACPC,GAER,OADAX,QAAQC,IAAI,gBACLU,EAAMC,MAEfC,QALiB,SAKTF,EAAOG,GAGb,GAFAd,QAAQC,IAAI,cAEPa,EAAQC,UAGb,OAAOJ,EAAMK,WAAWL,EAAMC,KAAKK,MAsBxBC,2BAAW,OAAQT,GAlBlC,SAAiBU,EAASL,GACxB,MAAO,CACLM,kBAAmBD,EAAQE,aAC3BC,WAAYR,EAAQQ,gBAeTJ,EAZf,SAAkBP,GAChB,IAAQS,EAAkCT,EAAlCS,kBAGR,OAH0CT,EAAfW,WAE3BtB,QAAQC,IAAIU,EAAO,cACZS,EAEL,6BACE,4BAAKT,EAAMY,SAASC,WC1BXC,I,iBCwBAC,gCAAgBC,IAAhBD,EAlBf,WACE,IAAME,EAAWC,cACXtC,EAAYuC,aAAY,SAACC,GAAD,OAAWA,EAAMxC,aAM/C,OAJAyC,qBAAU,WACRJ,ECdoB,uCAAM,WAAOA,GAAP,eAAAlC,EAAA,+EAEPuC,IAFO,OAEpB/B,EAFoB,OAG1B0B,EAAS,CAAEvC,KAAM,QAASC,QAASY,IAHT,gDAK1BF,QAAQC,IAAR,MAL0B,yDAAN,uDDepB2B,EEfwB,uCAAM,WAAOA,GAAP,eAAAlC,EAAA,+EAEXuC,EAAmBC,EAAMC,WAAWhD,OAFzB,OAExBe,EAFwB,OAG9B0B,EAAS,CAAEvC,KAAM,YAAaC,QAASY,IAHT,gDAK9BF,QAAQC,IAAR,MAL8B,yDAAN,yDFgBvB,CAAC2B,IAEF,oCAEGrC,EAAU6C,KAAI,SAACb,GACd,OAAO,kBAAC,EAAD,CAAUA,SAAUA,EAAUc,IAAKd,EAASN,YGjBrDiB,EAAQI,sBAAYC,EAAUC,kBAAQC,0BAAgBC,OAC5DC,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,GACf,kBAAC,EAAD,OAEFW,SAASC,eAAe,SAEXZ,oB","file":"static/js/main.d58659a0.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport employees from \"./employees\";\r\nimport token from \"./token.js\";\r\nexport default combineReducers({\r\n  token,\r\n  employees,\r\n});\r\n","export default (token = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"FETCH\":\r\n      return action.payload;\r\n    default:\r\n      return token;\r\n  }\r\n};\r\n","export default (employees = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return employees;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst fetchToken = async (setToken) => {\r\n  try {\r\n    const resp = await axios.post(\"http://cms.avertra.com/auth/local\", {\r\n      identifier: \"Cms@avertra.com\",\r\n      password: \"Avertra@2021\",\r\n    });\r\n    console.log(resp.data.jwt, \"token\");\r\n    return resp.data.jwt;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst fetchEmployees = async (token) => {\r\n  const emp_url = \"http://cms.avertra.com/employees\";\r\n  const headers = { Authorization: \"Bearer \" + token };\r\n  try {\r\n    const resp = await axios.get(emp_url, {\r\n      headers: headers,\r\n    });\r\n\r\n    return resp.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport { fetchToken, fetchEmployees };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DragSource } from \"react-dnd\";\r\n\r\nconst itemSource = {\r\n  beginDrag(props) {\r\n    console.log(\"Being Darged\");\r\n    return props.item;\r\n  },\r\n  endDrag(props, monitor) {\r\n    console.log(\"End Darged\");\r\n\r\n    if (!monitor.didDrop()) {\r\n      return;\r\n    }\r\n    return props.handleDrop(props.item.id);\r\n  },\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging(),\r\n  };\r\n}\r\nfunction Employee(props) {\r\n  const { connectDragSource, isDragging } = props;\r\n  const opacity = isDragging ? 0 : 1;\r\n  console.log(props, \"proooooops\");\r\n  return connectDragSource(\r\n    // parent div to hold the ul and li's\r\n    <div>\r\n      <ul>{props.employee.Name}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DragSource(\"item\", itemSource, collect)(Employee);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Team() {\r\n  return <div className=\"App\">team</div>;\r\n}\r\n\r\nexport default Team;\r\n","import React, { useState, useEffect } from \"react\";\nimport { getEmployees } from \"./actions/employees\";\nimport Employee from \"./components/Employee\";\nimport Alliance from \"./components/Alliance\";\nimport Team from \"./components/Team\";\nimport * as Api from \"./helpers/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { getToken } from \"./actions/token\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { DragDropContext } from \"react-dnd\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const employees = useSelector((state) => state.employees);\n\n  useEffect(() => {\n    dispatch(getToken());\n    dispatch(getEmployees());\n  }, [dispatch]);\n  return (\n    <div>\n      SURA\n      {employees.map((employee) => {\n        return <Employee employee={employee} key={employee.id} />;\n      })}\n    </div>\n  );\n}\n\nexport default DragDropContext(HTML5Backend)(App);\n","import * as api from \"../helpers/Api\";\r\n\r\n// action Creators\r\nexport const getToken = () => async (dispatch) => {\r\n  try {\r\n    const data = await api.fetchToken();\r\n    dispatch({ type: \"FETCH\", payload: data });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import * as api from \"../helpers/Api\";\r\nimport store from \"../index\";\r\n// action Creators\r\nexport const getEmployees = () => async (dispatch) => {\r\n  try {\r\n    const data = await api.fetchEmployees(store.getState().token);\r\n    dispatch({ type: \"FETCH_ALL\", payload: data });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport App from \"./App\";\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\nexport default store;\r\n"],"sourceRoot":""}