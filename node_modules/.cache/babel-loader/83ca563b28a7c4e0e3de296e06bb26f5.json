{"ast":null,"code":"import * as api from \"../helpers/Api/fetchDataApi.js\";\nimport store from \"../index\";\nimport * as functionallity from \"../helpers/functionallity/updateAlliances\";\nimport * as fetch from \"../helpers/Api/fetchDataApi\"; // action Creators\n\nexport const getAlliances = () => async dispatch => {\n  try {\n    const data = await api.fetchAlliances(store.getState().token);\n    dispatch({\n      type: \"FETCH_ALL_ALLIANCES\",\n      payload: data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const addTeamToAlliance = (team, alliance, teams, alliances) => async dispatch => {\n  try {\n    const alliancesUpdated = await functionallity.addTeamToAlliance(team, alliance, teams, alliances);\n    const teamsUpdated = await fetch.fetchTeams(store.getState().token);\n    console.log(teamsUpdated.filter(team => team.alliance === null || team.alliance === undefined), \" Hereeeeeeeeeeeeeeeeeeeeeeeeee\");\n    dispatch({\n      type: \"UPDATE_TEAMS\",\n      payload: teamsUpdated.filter(team => team.alliance === null || team.alliance === undefined)\n    });\n    dispatch({\n      type: \"UPDATE_ALLIANCES\",\n      payload: alliancesUpdated\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteTeamfromalliance = (team, teams, alliance) => async dispatch => {\n  try {\n    const updatedAlliances = await functionallity.updateAlliance(team, alliance);\n    dispatch({\n      type: \"UPDATE_ALLIANCES\",\n      payload: updatedAlliances\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/actions/alliances.js"],"names":["api","store","functionallity","fetch","getAlliances","dispatch","data","fetchAlliances","getState","token","type","payload","err","console","log","addTeamToAlliance","team","alliance","teams","alliances","alliancesUpdated","teamsUpdated","fetchTeams","filter","undefined","deleteTeamfromalliance","updatedAlliances","updateAlliance"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,gCAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,KAAKC,cAAZ,MAAgC,2CAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,6BAAvB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpD,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,cAAJ,CAAmBN,KAAK,CAACO,QAAN,GAAiBC,KAApC,CAAnB;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,qBAAR;AAA+BC,MAAAA,OAAO,EAAEL;AAAxC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAPM;AAQP,OAAO,MAAMG,iBAAiB,GAC5B,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,EAAwBC,SAAxB,KAAsC,MAAOd,QAAP,IAAoB;AACxD,MAAI;AACF,UAAMe,gBAAgB,GAAG,MAAMlB,cAAc,CAACa,iBAAf,CAC7BC,IAD6B,EAE7BC,QAF6B,EAG7BC,KAH6B,EAI7BC,SAJ6B,CAA/B;AAMA,UAAME,YAAY,GAAG,MAAMlB,KAAK,CAACmB,UAAN,CAAiBrB,KAAK,CAACO,QAAN,GAAiBC,KAAlC,CAA3B;AACAI,IAAAA,OAAO,CAACC,GAAR,CACEO,YAAY,CAACE,MAAb,CACGP,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,IAAlB,IAA0BD,IAAI,CAACC,QAAL,KAAkBO,SADxD,CADF,EAIE,gCAJF;AAOAnB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEU,YAAY,CAACE,MAAb,CACNP,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,IAAlB,IAA0BD,IAAI,CAACC,QAAL,KAAkBO,SAD/C;AAFF,KAAD,CAAR;AAMAnB,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAES;AAArC,KAAD,CAAR;AACD,GAtBD,CAsBE,OAAOR,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CA3BI;AA4BP,OAAO,MAAMa,sBAAsB,GACjC,CAACT,IAAD,EAAOE,KAAP,EAAcD,QAAd,KAA2B,MAAOZ,QAAP,IAAoB;AAC7C,MAAI;AACF,UAAMqB,gBAAgB,GAAG,MAAMxB,cAAc,CAACyB,cAAf,CAC7BX,IAD6B,EAE7BC,QAF6B,CAA/B;AAKAZ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEe;AAArC,KAAD,CAAR;AACD,GAPD,CAOE,OAAOd,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAZI","sourcesContent":["import * as api from \"../helpers/Api/fetchDataApi.js\";\r\nimport store from \"../index\";\r\nimport * as functionallity from \"../helpers/functionallity/updateAlliances\";\r\nimport * as fetch from \"../helpers/Api/fetchDataApi\";\r\n\r\n// action Creators\r\nexport const getAlliances = () => async (dispatch) => {\r\n  try {\r\n    const data = await api.fetchAlliances(store.getState().token);\r\n    dispatch({ type: \"FETCH_ALL_ALLIANCES\", payload: data });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport const addTeamToAlliance =\r\n  (team, alliance, teams, alliances) => async (dispatch) => {\r\n    try {\r\n      const alliancesUpdated = await functionallity.addTeamToAlliance(\r\n        team,\r\n        alliance,\r\n        teams,\r\n        alliances\r\n      );\r\n      const teamsUpdated = await fetch.fetchTeams(store.getState().token);\r\n      console.log(\r\n        teamsUpdated.filter(\r\n          (team) => team.alliance === null || team.alliance === undefined\r\n        ),\r\n        \" Hereeeeeeeeeeeeeeeeeeeeeeeeee\"\r\n      );\r\n\r\n      dispatch({\r\n        type: \"UPDATE_TEAMS\",\r\n        payload: teamsUpdated.filter(\r\n          (team) => team.alliance === null || team.alliance === undefined\r\n        ),\r\n      });\r\n      dispatch({ type: \"UPDATE_ALLIANCES\", payload: alliancesUpdated });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\nexport const deleteTeamfromalliance =\r\n  (team, teams, alliance) => async (dispatch) => {\r\n    try {\r\n      const updatedAlliances = await functionallity.updateAlliance(\r\n        team,\r\n        alliance\r\n      );\r\n\r\n      dispatch({ type: \"UPDATE_ALLIANCES\", payload: updatedAlliances });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}