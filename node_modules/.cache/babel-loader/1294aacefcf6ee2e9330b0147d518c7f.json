{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Alliance.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDrop, useDrag } from \"react-dnd\";\nimport { addTeamToAlliance } from \"../actions/alliances\";\nimport { useDispatch } from \"react-redux\";\nimport TeamInAlliance from \"./TeamInAlliance\";\nimport { Container, Col, Card } from \"react-bootstrap\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { color } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alliance(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"team\",\n    item: {\n      alliance: props.alliance\n    },\n    drop: item => {\n      dispatch(addTeamToAlliance(item.team, props.alliance, props.teams, props.alliances));\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n        borderRadius: \"20px\"\n      },\n      ref: drop,\n      children: [props.alliance.Name, /*#__PURE__*/_jsxDEV(Container, {\n        className: \"teamsInAlliance\",\n        children: props.alliance.teams.map(team => {\n          return /*#__PURE__*/_jsxDEV(TeamInAlliance, {\n            alliance: props.alliance,\n            team: team,\n            teams: props.teams,\n            alliance: props.alliance,\n            employees: props.employees\n          }, team.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Alliance, \"xH1SZyWZnxweqKlQZrVh4vFd8zA=\", false, function () {\n  return [useDispatch, useDrop];\n});\n\n_c = Alliance;\nexport default Alliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alliance\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Alliance.js"],"names":["React","useDrop","useDrag","addTeamToAlliance","useDispatch","TeamInAlliance","Container","Col","Card","DataGrid","color","Alliance","props","dispatch","isOver","drop","accept","item","alliance","team","teams","alliances","backgroundColor","borderRadius","Name","map","employees","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,iBAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,aAAtB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM,CAAC;AAAEU,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBd,OAAO,CAAC,OAAO;AACxCe,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAEN,KAAK,CAACM;AAAlB,KAFkC;AAGxCH,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CACNV,iBAAiB,CACfc,IAAI,CAACE,IADU,EAEfP,KAAK,CAACM,QAFS,EAGfN,KAAK,CAACQ,KAHS,EAIfR,KAAK,CAACS,SAJS,CADX,CAAR;AAQD;AAZuC,GAAP,CAAD,CAAlC;AAeA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,0BADZ;AAELC,QAAAA,YAAY,EAAE;AAFT,OADT;AAKE,MAAA,GAAG,EAAER,IALP;AAAA,iBAOGH,KAAK,CAACM,QAAN,CAAeM,IAPlB,eAQE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,iBAArB;AAAA,kBACGZ,KAAK,CAACM,QAAN,CAAeE,KAAf,CAAqBK,GAArB,CAA0BN,IAAD,IAAU;AAClC,8BACE,QAAC,cAAD;AAEE,YAAA,QAAQ,EAAEP,KAAK,CAACM,QAFlB;AAGE,YAAA,IAAI,EAAEC,IAHR;AAIE,YAAA,KAAK,EAAEP,KAAK,CAACQ,KAJf;AAKE,YAAA,QAAQ,EAAER,KAAK,CAACM,QALlB;AAME,YAAA,SAAS,EAAEN,KAAK,CAACc;AANnB,aACOP,IAAI,CAACQ,EADZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7CQhB,Q;UACUP,W,EAEUH,O;;;KAHpBU,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { addTeamToAlliance } from \"../actions/alliances\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport TeamInAlliance from \"./TeamInAlliance\";\r\nimport { Container, Col, Card } from \"react-bootstrap\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { color } from \"@mui/system\";\r\n\r\nfunction Alliance(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"team\",\r\n    item: { alliance: props.alliance },\r\n    drop: (item) => {\r\n      dispatch(\r\n        addTeamToAlliance(\r\n          item.team,\r\n          props.alliance,\r\n          props.teams,\r\n          props.alliances\r\n        )\r\n      );\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        style={{\r\n          backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n          borderRadius: \"20px\",\r\n        }}\r\n        ref={drop}\r\n      >\r\n        {props.alliance.Name}\r\n        <Container className=\"teamsInAlliance\">\r\n          {props.alliance.teams.map((team) => {\r\n            return (\r\n              <TeamInAlliance\r\n                key={team.id}\r\n                alliance={props.alliance}\r\n                team={team}\r\n                teams={props.teams}\r\n                alliance={props.alliance}\r\n                employees={props.employees}\r\n              />\r\n            );\r\n          })}\r\n        </Container>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Alliance;\r\n"]},"metadata":{},"sourceType":"module"}