{"ast":null,"code":"import axios from \"axios\";\nimport store from \"../../index\";\n\nconst addTeamToAllianceApi = async (team, alliance) => {\n  var data = JSON.stringify({\n    alliance: alliance.id\n  });\n  const team_url = `http://cms.avertra.com/teams/${team.id}`;\n  var config = {\n    method: \"put\",\n    url: team_url,\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token,\n      \"Content-Type\": \"application/json\"\n    },\n    data: data\n  };\n\n  try {\n    const x = await axios(config);\n    const alliance_url = \"http://cms.avertra.com/alliances\";\n    const headers = {\n      Authorization: \"Bearer \" + store.getState().token\n    };\n\n    try {\n      const resp = await axios.get(alliance_url, {\n        headers: headers\n      });\n      console.log(resp.data, \"DATAAA\");\n      return resp.data;\n    } catch (err) {\n      console.error(err);\n      return [];\n    }\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst createNewTeam = async NewTeamName => {\n  var data = JSON.stringify({\n    Name: NewTeamName\n  });\n  var config = {\n    method: \"post\",\n    url: \"http://cms.avertra.com/teams\",\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token,\n      \"Content-Type\": \"application/json\"\n    },\n    data: data\n  };\n\n  try {\n    const resp = await axios(config);\n    return resp.data;\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nconst deleteTeam = async team => {\n  var config = {\n    method: \"delete\",\n    url: `http://cms.avertra.com/teams/${team.id}`,\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token\n    }\n  };\n\n  try {\n    await axios(config);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst addEmployeeToTeam = async (employee, team, teams) => {\n  const ids = employee[\"teams\"].map(t => {\n    return t.id;\n  });\n  var data = JSON.stringify({\n    teams: ids.concat(team.id)\n  });\n  const employee_url = `http://cms.avertra.com/employees/${employee.id}`;\n  var config = {\n    method: \"put\",\n    url: employee_url,\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token,\n      \"Content-Type\": \"application/json\"\n    },\n    data: data\n  };\n\n  try {\n    await axios(config);\n    const team_url = \"http://cms.avertra.com/teams\";\n    const headers = {\n      Authorization: \"Bearer \" + store.getState().token\n    };\n\n    try {\n      const resp = await axios.get(team_url, {\n        headers: headers\n      });\n      return resp.data;\n    } catch (err) {\n      console.error(err);\n      return [];\n    }\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst updateAlliance = async (team, alliance) => {\n  const teamsNew = alliance.teams.filter(t => t !== team);\n  var data = JSON.stringify({\n    teams: teamsNew\n  });\n  const alliance_url_by_id = `http://cms.avertra.com/alliances/${alliance.id}`;\n  var config = {\n    method: \"put\",\n    url: alliance_url_by_id,\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token,\n      \"Content-Type\": \"application/json\"\n    },\n    data: data\n  };\n\n  try {\n    await axios(config);\n    const alliances_url = \"http://cms.avertra.com/alliances\";\n    const headers = {\n      Authorization: \"Bearer \" + store.getState().token\n    };\n\n    try {\n      const resp = await axios.get(alliances_url, {\n        headers: headers\n      });\n      return resp.data;\n    } catch (err) {\n      console.error(err);\n      return [];\n    }\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst updateTeams = async team => {\n  var data = JSON.stringify({\n    alliance: undefined\n  });\n  const teams_url_by_id = `http://cms.avertra.com/teams/${team.id}`;\n  var config = {\n    method: \"put\",\n    url: teams_url_by_id,\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token,\n      \"Content-Type\": \"application/json\"\n    },\n    data: data\n  };\n\n  try {\n    await axios(config);\n    const teams_url = \"http://cms.avertra.com/teams\";\n    const headers = {\n      Authorization: \"Bearer \" + store.getState().token\n    };\n\n    try {\n      const resp = await axios.get(teams_url, {\n        headers: headers\n      });\n      return resp.data;\n    } catch (err) {\n      console.error(err);\n      return [];\n    }\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport { addTeamToAllianceApi, createNewTeam, deleteTeam, addEmployeeToTeam, updateAlliance, updateTeams };","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/helpers/Api/helperApis.js"],"names":["axios","store","addTeamToAllianceApi","team","alliance","data","JSON","stringify","id","team_url","config","method","url","headers","Authorization","getState","token","x","alliance_url","resp","get","console","log","err","error","createNewTeam","NewTeamName","Name","deleteTeam","addEmployeeToTeam","employee","teams","ids","map","t","concat","employee_url","updateAlliance","teamsNew","filter","alliance_url_by_id","alliances_url","updateTeams","undefined","teams_url_by_id","teams_url"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport store from \"../../index\";\r\nconst addTeamToAllianceApi = async (team, alliance) => {\r\n  var data = JSON.stringify({\r\n    alliance: alliance.id,\r\n  });\r\n  const team_url = `http://cms.avertra.com/teams/${team.id}`;\r\n\r\n  var config = {\r\n    method: \"put\",\r\n    url: team_url,\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: data,\r\n  };\r\n\r\n  try {\r\n    const x = await axios(config);\r\n    const alliance_url = \"http://cms.avertra.com/alliances\";\r\n    const headers = { Authorization: \"Bearer \" + store.getState().token };\r\n    try {\r\n      const resp = await axios.get(alliance_url, {\r\n        headers: headers,\r\n      });\r\n      console.log(resp.data, \"DATAAA\");\r\n      return resp.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n      return [];\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst createNewTeam = async (NewTeamName) => {\r\n  var data = JSON.stringify({\r\n    Name: NewTeamName,\r\n  });\r\n  var config = {\r\n    method: \"post\",\r\n    url: \"http://cms.avertra.com/teams\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: data,\r\n  };\r\n  try {\r\n    const resp = await axios(config);\r\n    return resp.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return {};\r\n  }\r\n};\r\nconst deleteTeam = async (team) => {\r\n  var config = {\r\n    method: \"delete\",\r\n    url: `http://cms.avertra.com/teams/${team.id}`,\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n    },\r\n  };\r\n  try {\r\n    await axios(config);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\nconst addEmployeeToTeam = async (employee, team, teams) => {\r\n  const ids = employee[\"teams\"].map((t) => {\r\n    return t.id;\r\n  });\r\n  var data = JSON.stringify({\r\n    teams: ids.concat(team.id),\r\n  });\r\n\r\n  const employee_url = `http://cms.avertra.com/employees/${employee.id}`;\r\n\r\n  var config = {\r\n    method: \"put\",\r\n    url: employee_url,\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: data,\r\n  };\r\n\r\n  try {\r\n    await axios(config);\r\n    const team_url = \"http://cms.avertra.com/teams\";\r\n    const headers = { Authorization: \"Bearer \" + store.getState().token };\r\n    try {\r\n      const resp = await axios.get(team_url, {\r\n        headers: headers,\r\n      });\r\n      return resp.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n      return [];\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\nconst updateAlliance = async (team, alliance) => {\r\n  const teamsNew = alliance.teams.filter((t) => t !== team);\r\n  var data = JSON.stringify({\r\n    teams: teamsNew,\r\n  });\r\n  const alliance_url_by_id = `http://cms.avertra.com/alliances/${alliance.id}`;\r\n\r\n  var config = {\r\n    method: \"put\",\r\n    url: alliance_url_by_id,\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: data,\r\n  };\r\n\r\n  try {\r\n    await axios(config);\r\n    const alliances_url = \"http://cms.avertra.com/alliances\";\r\n    const headers = { Authorization: \"Bearer \" + store.getState().token };\r\n    try {\r\n      const resp = await axios.get(alliances_url, {\r\n        headers: headers,\r\n      });\r\n      return resp.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n      return [];\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst updateTeams = async (team) => {\r\n  var data = JSON.stringify({\r\n    alliance: undefined,\r\n  });\r\n  const teams_url_by_id = `http://cms.avertra.com/teams/${team.id}`;\r\n\r\n  var config = {\r\n    method: \"put\",\r\n    url: teams_url_by_id,\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: data,\r\n  };\r\n\r\n  try {\r\n    await axios(config);\r\n    const teams_url = \"http://cms.avertra.com/teams\";\r\n    const headers = { Authorization: \"Bearer \" + store.getState().token };\r\n    try {\r\n      const resp = await axios.get(teams_url, {\r\n        headers: headers,\r\n      });\r\n      return resp.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n      return [];\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\nexport {\r\n  addTeamToAllianceApi,\r\n  createNewTeam,\r\n  deleteTeam,\r\n  addEmployeeToTeam,\r\n  updateAlliance,\r\n  updateTeams,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}