{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Alliance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { addTeamToAlliance } from \"../helpers/functionallity/teamAlliance\";\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Divider from \"@mui/material/Divider\";\nimport Typography from \"@mui/material/Typography\";\nimport alliances from \"../reducers/alliances\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alliance(props) {\n  _s();\n\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"team\",\n    drop: item => {\n      addTeamToAlliance(item.team, props.alliance);\n    }\n  }));\n  let teams = JSON.parse(localStorage.getItem(`${props.alliance.id}`)) || [];\n  useEffect(async () => {}, []);\n  return (\n    /*#__PURE__*/\n    // <List\n    //   className=\"alliance\"\n    //   ref={drop}\n    //   style={{ marginLeft: \"50px\", marginBottom: \"50px\" }}\n    // >\n    //   {teams.map((team) => {\n    //     return <div style={{ marginBottom: \"12\" }}> {team.Name}</div>;\n    //   })}\n    // </List>\n    _jsxDEV(List, {\n      ref: drop,\n      sx: {\n        width: \"100%\",\n        maxWidth: 360,\n        bgcolor: \"background.paper\",\n        marginLeft: \"50px\",\n        marginBottom: \"50px\"\n      },\n      children: teams.map(team => {\n        /*#__PURE__*/\n        _jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: \"Remy Sharp\",\n              src: \"/static/images/avatar/1.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: team.Name,\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.primary\",\n                children: \"Ali Connors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), \" — I'll be in your neighborhood doing errands this…\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Alliance, \"qnG+gXTNke131kmDyW2upLFTY5U=\", false, function () {\n  return [useDrop];\n});\n\n_c = Alliance;\nexport default Alliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alliance\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Alliance.js"],"names":["React","useEffect","useDrop","addTeamToAlliance","getTeamBelongToThisAlliance","List","ListItem","ListItemText","ListItemAvatar","Avatar","Divider","Typography","alliances","Alliance","props","isOver","drop","accept","item","team","alliance","teams","JSON","parse","localStorage","getItem","id","width","maxWidth","bgcolor","marginLeft","marginBottom","map","Name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,2BAAT,QAA4C,2BAA5C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBd,OAAO,CAAC,OAAO;AACxCe,IAAAA,MAAM,EAAE,MADgC;AAExCD,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACdf,MAAAA,iBAAiB,CAACe,IAAI,CAACC,IAAN,EAAYL,KAAK,CAACM,QAAlB,CAAjB;AACD;AAJuC,GAAP,CAAD,CAAlC;AAMA,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,GAAEX,KAAK,CAACM,QAAN,CAAeM,EAAG,EAA1C,CAAX,KAA4D,EAAxE;AAEAzB,EAAAA,SAAS,CAAC,YAAY,CAAE,CAAf,EAAiB,EAAjB,CAAT;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,IAAD;AACE,MAAA,GAAG,EAAEe,IADP;AAEE,MAAA,EAAE,EAAE;AACFW,QAAAA,KAAK,EAAE,MADL;AAEFC,QAAAA,QAAQ,EAAE,GAFR;AAGFC,QAAAA,OAAO,EAAE,kBAHP;AAIFC,QAAAA,UAAU,EAAE,MAJV;AAKFC,QAAAA,YAAY,EAAE;AALZ,OAFN;AAAA,gBAUGV,KAAK,CAACW,GAAN,CAAWb,IAAD,IAAU;AACnB;AAAA,gBAAC,QAAD;AAAU,UAAA,UAAU,EAAC,YAArB;AAAA,kCACE,QAAC,cAAD;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,GAAG,EAAC,YAAZ;AAAyB,cAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,YAAD;AACE,YAAA,OAAO,EAAEA,IAAI,CAACc,IADhB;AAEE,YAAA,SAAS,eACP,QAAC,KAAD,CAAO,QAAP;AAAA,sCACE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,OAApB;AAA4B,gBAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIG,qDAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBD,OAjBA;AAVH;AAAA;AAAA;AAAA;AAAA;AAVF;AAwCD;;GAlDQpB,Q;UACoBX,O;;;KADpBW,Q;AAmDT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { addTeamToAlliance } from \"../helpers/functionallity/teamAlliance\";\r\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport alliances from \"../reducers/alliances\";\r\nfunction Alliance(props) {\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"team\",\r\n    drop: (item) => {\r\n      addTeamToAlliance(item.team, props.alliance);\r\n    },\r\n  }));\r\n  let teams = JSON.parse(localStorage.getItem(`${props.alliance.id}`)) || [];\r\n\r\n  useEffect(async () => {}, []);\r\n  return (\r\n    // <List\r\n    //   className=\"alliance\"\r\n    //   ref={drop}\r\n    //   style={{ marginLeft: \"50px\", marginBottom: \"50px\" }}\r\n    // >\r\n    //   {teams.map((team) => {\r\n    //     return <div style={{ marginBottom: \"12\" }}> {team.Name}</div>;\r\n    //   })}\r\n    // </List>\r\n    <List\r\n      ref={drop}\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        marginLeft: \"50px\",\r\n        marginBottom: \"50px\",\r\n      }}\r\n    >\r\n      {teams.map((team) => {\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemAvatar>\r\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={team.Name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography variant=\"body2\" color=\"text.primary\">\r\n                  Ali Connors\r\n                </Typography>\r\n                {\" — I'll be in your neighborhood doing errands this…\"}\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>;\r\n      })}\r\n    </List>\r\n  );\r\n}\r\nexport default Alliance;\r\n"]},"metadata":{},"sourceType":"module"}