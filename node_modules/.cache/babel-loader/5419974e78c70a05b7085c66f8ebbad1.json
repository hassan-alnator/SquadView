{"ast":null,"code":"import * as helaperApi from \"../Api/helperApis.js\";\nexport const addTeamToAlliance = async (team, alliance, teams) => {\n  //     var employeesUpdated = team.employees.filter((e) => e.id !== employee.id);\n  //     employeesUpdated = employeesUpdated.concat(employeeUpdated);\n  //     var teamsUpdated = teams.filter((t) => t.id !== team.id);\n  //     const index = teams.findIndex((x) => x.id === team.id);\n  //     team.employees = employeesUpdated;\n  //     teamsUpdated.splice(index, 0, team);\n  //     return teamsUpdated;\n  try {\n    const teamUpdated = await helaperApi.addTeamToAllianceApi(team, alliance); //     var teamsUpdated = alliance.teams.filter((t) => t.id !== team.id);\n    //     teamsUpdated = teamsUpdated.concat(employeeUpdated);\n\n    var UpdatedTeams = teams.filter(t => {\n      return t.id !== team.id;\n    });\n    UpdatedTeams = UpdatedTeams.concat(teamUpdated);\n    return UpdatedTeams;\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/helpers/functionallity/updateAlliances.js"],"names":["helaperApi","addTeamToAlliance","team","alliance","teams","teamUpdated","addTeamToAllianceApi","UpdatedTeams","filter","t","id","concat","err","console","log"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,sBAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,IAAP,EAAaC,QAAb,EAAuBC,KAAvB,KAAiC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI;AACF,UAAMC,WAAW,GAAG,MAAML,UAAU,CAACM,oBAAX,CAAgCJ,IAAhC,EAAsCC,QAAtC,CAA1B,CADE,CAEF;AACA;;AACA,QAAII,YAAY,GAAGH,KAAK,CAACI,MAAN,CAAcC,CAAD,IAAO;AACrC,aAAOA,CAAC,CAACC,EAAF,KAASR,IAAI,CAACQ,EAArB;AACD,KAFkB,CAAnB;AAIAH,IAAAA,YAAY,GAAGA,YAAY,CAACI,MAAb,CAAoBN,WAApB,CAAf;AAEA,WAAOE,YAAP;AACD,GAXD,CAWE,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAtBM","sourcesContent":["import * as helaperApi from \"../Api/helperApis.js\";\r\n\r\nexport const addTeamToAlliance = async (team, alliance, teams) => {\r\n  //     var employeesUpdated = team.employees.filter((e) => e.id !== employee.id);\r\n  //     employeesUpdated = employeesUpdated.concat(employeeUpdated);\r\n  //     var teamsUpdated = teams.filter((t) => t.id !== team.id);\r\n  //     const index = teams.findIndex((x) => x.id === team.id);\r\n  //     team.employees = employeesUpdated;\r\n  //     teamsUpdated.splice(index, 0, team);\r\n  //     return teamsUpdated;\r\n  try {\r\n    const teamUpdated = await helaperApi.addTeamToAllianceApi(team, alliance);\r\n    //     var teamsUpdated = alliance.teams.filter((t) => t.id !== team.id);\r\n    //     teamsUpdated = teamsUpdated.concat(employeeUpdated);\r\n    var UpdatedTeams = teams.filter((t) => {\r\n      return t.id !== team.id;\r\n    });\r\n\r\n    UpdatedTeams = UpdatedTeams.concat(teamUpdated);\r\n\r\n    return UpdatedTeams;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}