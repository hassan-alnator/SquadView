{"ast":null,"code":"import * as fetchApi from \"../helpers/Api/fetchDataApi.js\";\nimport * as functionallity from \"../helpers/functionallity/updateTeams\";\nimport * as fetch from \"../helpers/Api/fetchDataApi\";\nimport store from \"../index\"; // action Creators\n\nexport const getTeams = () => async dispatch => {\n  try {\n    const data = await fetchApi.fetchTeams(store.getState().token);\n    dispatch({\n      type: \"FETCH_ALL_TEAMS\",\n      payload: data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const AddTeam = (teams, NewTeamName) => async dispatch => {\n  try {\n    const newTeam = await functionallity.addNewTeam(NewTeamName);\n    dispatch({\n      type: \"UPDATE_TEAMS\",\n      payload: teams.concat(newTeam).filter(t => t.alliance === null || t.alliance === undefined)\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateTeam = team => async dispatch => {\n  try {\n    const teams = await functionallity.updateTeams(team);\n    dispatch({\n      type: \"UPDATE_TEAMS\",\n      payload: teams.filter(t => t.alliance === null || t.alliance === undefined)\n    });\n    const alliancesUpdated = await fetch.fetchAlliances(store.getState().token);\n    dispatch({\n      type: \"UPDATE_ALLIANCES\",\n      payload: alliancesUpdated\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteTeam = (team, teams) => async dispatch => {\n  try {\n    const teamsAfterDelete = await functionallity.deleteTeam(team, teams);\n    dispatch({\n      type: \"UPDATE_TEAMS\",\n      payload: teamsAfterDelete\n    });\n    const alliancesUpdated = await fetch.fetchAlliances(store.getState().token);\n    dispatch({\n      type: \"UPDATE_ALLIANCES\",\n      payload: alliancesUpdated\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const addEmployeeToTeam = (employee, team, employees, teams) => async dispatch => {\n  try {\n    const teamsUpdated = await functionallity.addEmployeeToTeam(employee, team, employees, teams);\n    const alliancesUpdated = await fetch.fetchAlliances(store.getState().token);\n    dispatch({\n      type: \"UPDATE_TEAMS\",\n      payload: teamsUpdated\n    });\n    dispatch({\n      type: \"UPDATE_ALLIANCES\",\n      payload: alliancesUpdated\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/actions/teams.js"],"names":["fetchApi","functionallity","fetch","store","getTeams","dispatch","data","fetchTeams","getState","token","type","payload","err","console","log","AddTeam","teams","NewTeamName","newTeam","addNewTeam","concat","filter","t","alliance","undefined","updateTeam","team","updateTeams","alliancesUpdated","fetchAlliances","deleteTeam","teamsAfterDelete","addEmployeeToTeam","employee","employees","teamsUpdated"],"mappings":"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","sourcesContent":["import * as fetchApi from \"../helpers/Api/fetchDataApi.js\";\r\nimport * as functionallity from \"../helpers/functionallity/updateTeams\";\r\nimport * as fetch from \"../helpers/Api/fetchDataApi\";\r\nimport store from \"../index\";\r\n// action Creators\r\nexport const getTeams = () => async (dispatch) => {\r\n  try {\r\n    const data = await fetchApi.fetchTeams(store.getState().token);\r\n    dispatch({ type: \"FETCH_ALL_TEAMS\", payload: data });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport const AddTeam = (teams, NewTeamName) => async (dispatch) => {\r\n  try {\r\n    const newTeam = await functionallity.addNewTeam(NewTeamName);\r\n    dispatch({\r\n      type: \"UPDATE_TEAMS\",\r\n      payload: teams\r\n        .concat(newTeam)\r\n        .filter((t) => t.alliance === null || t.alliance === undefined),\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport const updateTeam = (team) => async (dispatch) => {\r\n  try {\r\n    const teams = await functionallity.updateTeams(team);\r\n    dispatch({\r\n      type: \"UPDATE_TEAMS\",\r\n      payload: teams.filter(\r\n        (t) => t.alliance === null || t.alliance === undefined\r\n      ),\r\n    });\r\n    const alliancesUpdated = await fetch.fetchAlliances(store.getState().token);\r\n    dispatch({ type: \"UPDATE_ALLIANCES\", payload: alliancesUpdated });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport const deleteTeam = (team, teams) => async (dispatch) => {\r\n  try {\r\n    const teamsAfterDelete = await functionallity.deleteTeam(team, teams);\r\n    dispatch({ type: \"UPDATE_TEAMS\", payload: teamsAfterDelete });\r\n    const alliancesUpdated = await fetch.fetchAlliances(store.getState().token);\r\n    dispatch({ type: \"UPDATE_ALLIANCES\", payload: alliancesUpdated });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const addEmployeeToTeam =\r\n  (employee, team, employees, teams) => async (dispatch) => {\r\n    try {\r\n      const teamsUpdated = await functionallity.addEmployeeToTeam(\r\n        employee,\r\n        team,\r\n        employees,\r\n        teams\r\n      );\r\n      const alliancesUpdated = await fetch.fetchAlliances(\r\n        store.getState().token\r\n      );\r\n      dispatch({ type: \"UPDATE_TEAMS\", payload: teamsUpdated });\r\n      dispatch({ type: \"UPDATE_ALLIANCES\", payload: alliancesUpdated });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}