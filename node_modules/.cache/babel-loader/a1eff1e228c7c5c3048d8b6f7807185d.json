{"ast":null,"code":"import * as helaperApi from \"../Api/helperApis.js\";\nexport const addTeamToAlliance = async (team, alliance, teams, alliances) => {\n  //     var employeesUpdated = team.employees.filter((e) => e.id !== employee.id);\n  //     employeesUpdated = employeesUpdated.concat(employeeUpdated);\n  //     var teamsUpdated = teams.filter((t) => t.id !== team.id);\n  //     const index = teams.findIndex((x) => x.id === team.id);\n  //     team.employees = employeesUpdated;\n  //     teamsUpdated.splice(index, 0, team);\n  //     return teamsUpdated;\n  try {\n    const alliances = await helaperApi.addTeamToAllianceApi(team, alliance);\n    console.log(teamUpdated, \"TEAM UPDATEDDDD\");\n    var teamsUpdated = alliance.teams.filter(t => t.id !== team.id);\n    console.log(teamsUpdated, \"TEAMsssssssssssss UPDATEDDDD\");\n    teamsUpdated = teamsUpdated.concat(teamUpdated);\n    console.log(teamsUpdated, \"TEAMsssssssssssss UPDATEDDDD AFTER ADDING UPDATING TEAM\");\n    var alliancesUpdated = alliances.filter(t => t.id !== alliance.id);\n    console.log(alliancesUpdated, \"alliancesUpdated\");\n    const index = alliances.findIndex(x => x.id === alliance.id);\n    alliance.teams = teamsUpdated;\n    console.log(alliance, \"alliance with updating team\");\n    alliancesUpdated.splice(index, 0, alliance);\n    console.log(alliancesUpdated, \"alliances Updateddd\");\n    return alliancesUpdated;\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/helpers/functionallity/updateAlliances.js"],"names":["helaperApi","addTeamToAlliance","team","alliance","teams","alliances","addTeamToAllianceApi","console","log","teamUpdated","teamsUpdated","filter","t","id","concat","alliancesUpdated","index","findIndex","x","splice","err"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,sBAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,IAAP,EAAaC,QAAb,EAAuBC,KAAvB,EAA8BC,SAA9B,KAA4C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI;AACF,UAAMA,SAAS,GAAG,MAAML,UAAU,CAACM,oBAAX,CAAgCJ,IAAhC,EAAsCC,QAAtC,CAAxB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ,EAAyB,iBAAzB;AACA,QAAIC,YAAY,GAAGP,QAAQ,CAACC,KAAT,CAAeO,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACW,EAA3C,CAAnB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ,EAA0B,8BAA1B;AAEAA,IAAAA,YAAY,GAAGA,YAAY,CAACI,MAAb,CAAoBL,WAApB,CAAf;AACAF,IAAAA,OAAO,CAACC,GAAR,CACEE,YADF,EAEE,yDAFF;AAKA,QAAIK,gBAAgB,GAAGV,SAAS,CAACM,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASV,QAAQ,CAACU,EAA1C,CAAvB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYO,gBAAZ,EAA8B,kBAA9B;AAEA,UAAMC,KAAK,GAAGX,SAAS,CAACY,SAAV,CAAqBC,CAAD,IAAOA,CAAC,CAACL,EAAF,KAASV,QAAQ,CAACU,EAA7C,CAAd;AAEAV,IAAAA,QAAQ,CAACC,KAAT,GAAiBM,YAAjB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsB,6BAAtB;AAEAY,IAAAA,gBAAgB,CAACI,MAAjB,CAAwBH,KAAxB,EAA+B,CAA/B,EAAkCb,QAAlC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYO,gBAAZ,EAA8B,qBAA9B;AACA,WAAOA,gBAAP;AACD,GAvBD,CAuBE,OAAOK,GAAP,EAAY;AACZb,IAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACD;AACF,CAlCM","sourcesContent":["import * as helaperApi from \"../Api/helperApis.js\";\r\n\r\nexport const addTeamToAlliance = async (team, alliance, teams, alliances) => {\r\n  //     var employeesUpdated = team.employees.filter((e) => e.id !== employee.id);\r\n  //     employeesUpdated = employeesUpdated.concat(employeeUpdated);\r\n  //     var teamsUpdated = teams.filter((t) => t.id !== team.id);\r\n  //     const index = teams.findIndex((x) => x.id === team.id);\r\n  //     team.employees = employeesUpdated;\r\n  //     teamsUpdated.splice(index, 0, team);\r\n  //     return teamsUpdated;\r\n  try {\r\n    const alliances = await helaperApi.addTeamToAllianceApi(team, alliance);\r\n    console.log(teamUpdated, \"TEAM UPDATEDDDD\");\r\n    var teamsUpdated = alliance.teams.filter((t) => t.id !== team.id);\r\n    console.log(teamsUpdated, \"TEAMsssssssssssss UPDATEDDDD\");\r\n\r\n    teamsUpdated = teamsUpdated.concat(teamUpdated);\r\n    console.log(\r\n      teamsUpdated,\r\n      \"TEAMsssssssssssss UPDATEDDDD AFTER ADDING UPDATING TEAM\"\r\n    );\r\n\r\n    var alliancesUpdated = alliances.filter((t) => t.id !== alliance.id);\r\n    console.log(alliancesUpdated, \"alliancesUpdated\");\r\n\r\n    const index = alliances.findIndex((x) => x.id === alliance.id);\r\n\r\n    alliance.teams = teamsUpdated;\r\n    console.log(alliance, \"alliance with updating team\");\r\n\r\n    alliancesUpdated.splice(index, 0, alliance);\r\n    console.log(alliancesUpdated, \"alliances Updateddd\");\r\n    return alliancesUpdated;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}