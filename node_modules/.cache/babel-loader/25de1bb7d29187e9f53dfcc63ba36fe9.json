{"ast":null,"code":"import * as helaperApi from \"../Api/helperApis.js\";\nexport const addEmployeeToTeam = async (employee, team, employees, teams) => {\n  try {\n    const employeeUpdated = await helaperApi.addEmployeeToTeam(employee, team);\n    var employeesUpdated = team.employees.filter(e => e.id !== employee.id);\n    employeesUpdated = employeesUpdated.concat(employeeUpdated);\n    var teamsUpdated = teams.filter(t => t.id !== team.id);\n    index = teams.findIndex(x => x.id === team);\n    team.employees = employeesUpdated;\n    teamsUpdated = teamsUpdated.concat(team);\n    return teamsUpdated;\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/helpers/functionallity/updateEmployee.js"],"names":["helaperApi","addEmployeeToTeam","employee","team","employees","teams","employeeUpdated","employeesUpdated","filter","e","id","concat","teamsUpdated","t","index","findIndex","x","err","console","log"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,sBAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,KAA4C;AAC3E,MAAI;AACF,UAAMC,eAAe,GAAG,MAAMN,UAAU,CAACC,iBAAX,CAA6BC,QAA7B,EAAuCC,IAAvC,CAA9B;AAEA,QAAII,gBAAgB,GAAGJ,IAAI,CAACC,SAAL,CAAeI,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,QAAQ,CAACQ,EAA/C,CAAvB;AACAH,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACI,MAAjB,CAAwBL,eAAxB,CAAnB;AACA,QAAIM,YAAY,GAAGP,KAAK,CAACG,MAAN,CAAcK,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASP,IAAI,CAACO,EAAlC,CAAnB;AACAI,IAAAA,KAAK,GAAGT,KAAK,CAACU,SAAN,CAAiBC,CAAD,IAAOA,CAAC,CAACN,EAAF,KAASP,IAAhC,CAAR;AAEAA,IAAAA,IAAI,CAACC,SAAL,GAAiBG,gBAAjB;AACAK,IAAAA,YAAY,GAAGA,YAAY,CAACD,MAAb,CAAoBR,IAApB,CAAf;AACA,WAAOS,YAAP;AACD,GAXD,CAWE,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAfM","sourcesContent":["import * as helaperApi from \"../Api/helperApis.js\";\r\n\r\nexport const addEmployeeToTeam = async (employee, team, employees, teams) => {\r\n  try {\r\n    const employeeUpdated = await helaperApi.addEmployeeToTeam(employee, team);\r\n\r\n    var employeesUpdated = team.employees.filter((e) => e.id !== employee.id);\r\n    employeesUpdated = employeesUpdated.concat(employeeUpdated);\r\n    var teamsUpdated = teams.filter((t) => t.id !== team.id);\r\n    index = teams.findIndex((x) => x.id === team);\r\n\r\n    team.employees = employeesUpdated;\r\n    teamsUpdated = teamsUpdated.concat(team);\r\n    return teamsUpdated;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}