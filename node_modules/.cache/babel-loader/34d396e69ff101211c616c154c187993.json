{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Alliance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDrop, useDrag } from \"react-dnd\";\nimport { addTeamToAlliance } from \"../actions/teams\";\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis.js\";\nimport { useDispatch } from \"react-redux\";\nimport Card from \"@mui/material/Card\";\nimport Team from \"./Team\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alliance(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [teams, setTeams] = useState(props.teams);\n  useEffect(async () => {\n    try {\n      setTeams(await getTeamBelongToThisAlliance(props.alliance));\n    } catch (err) {\n      console.log(err);\n    }\n  }, [teams]);\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"team\",\n    drop: item => {\n      dispatch(addTeamToAlliance(item.team, props.alliance, teams));\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"alliance\",\n    ref: drop,\n    style: {\n      backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n      borderRadius: \"20px\"\n    },\n    children: props.alliance.Name\n  }, props.alliance.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Alliance, \"UU1xKzOfi2013q6vdDkOCjiTNUA=\", false, function () {\n  return [useDispatch, useDrop];\n});\n\n_c = Alliance;\nexport default Alliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alliance\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Alliance.js"],"names":["React","useEffect","useState","useDrop","useDrag","addTeamToAlliance","getTeamBelongToThisAlliance","useDispatch","Card","Team","Alliance","props","dispatch","teams","setTeams","alliance","err","console","log","isOver","drop","accept","item","team","backgroundColor","borderRadius","Name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,SAASC,2BAAT,QAA4C,8BAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACS,KAAK,CAACE,KAAP,CAAlC;AAEAZ,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI;AACFa,MAAAA,QAAQ,CAAC,MAAMR,2BAA2B,CAACK,KAAK,CAACI,QAAP,CAAlC,CAAR;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GANQ,EAMN,CAACH,KAAD,CANM,CAAT;AAQA,QAAM,CAAC;AAAEM,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBjB,OAAO,CAAC,OAAO;AACxCkB,IAAAA,MAAM,EAAE,MADgC;AAExCD,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACdV,MAAAA,QAAQ,CAACP,iBAAiB,CAACiB,IAAI,CAACC,IAAN,EAAYZ,KAAK,CAACI,QAAlB,EAA4BF,KAA5B,CAAlB,CAAR;AACD;AAJuC,GAAP,CAAD,CAAlC;AAOA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,GAAG,EAAEO,IAFP;AAGE,IAAA,KAAK,EAAE;AACLI,MAAAA,eAAe,EAAE,0BADZ;AAELC,MAAAA,YAAY,EAAE;AAFT,KAHT;AAAA,cASGd,KAAK,CAACI,QAAN,CAAeW;AATlB,KAOOf,KAAK,CAACI,QAAN,CAAeY,EAPtB;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhCQjB,Q;UACUH,W,EAWUJ,O;;;KAZpBO,Q;AAkCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { addTeamToAlliance } from \"../actions/teams\";\r\n\r\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Card from \"@mui/material/Card\";\r\n\r\nimport Team from \"./Team\";\r\nfunction Alliance(props) {\r\n  const dispatch = useDispatch();\r\n  const [teams, setTeams] = useState(props.teams);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      setTeams(await getTeamBelongToThisAlliance(props.alliance));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [teams]);\r\n\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"team\",\r\n    drop: (item) => {\r\n      dispatch(addTeamToAlliance(item.team, props.alliance, teams));\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Card\r\n      className=\"alliance\"\r\n      ref={drop}\r\n      style={{\r\n        backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n        borderRadius: \"20px\",\r\n      }}\r\n      key={props.alliance.id}\r\n    >\r\n      {props.alliance.Name}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Alliance;\r\n"]},"metadata":{},"sourceType":"module"}