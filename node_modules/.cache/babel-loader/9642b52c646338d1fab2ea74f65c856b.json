{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Team.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { useDrop, useDrag } from \"react-dnd\";\nimport { addEmployeeToTeam } from \"../actions/teams\";\nimport { deleteTeam } from \"../actions/teams\";\nimport { useDispatch } from \"react-redux\";\nimport Card from \"@mui/material/Card\";\nimport { Button } from \"@mui/material\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { connect } from \"react-redux\";\nimport { getEmployees } from \"../actions/employees\";\nimport { getToken } from \"../actions/token\";\nimport { getTeams } from \"../actions/teams\";\nimport { getAlliances } from \"../actions/alliances\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Team(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [employees, setemployees] = useState([]);\n  useEffect(async () => {\n    try {\n      const token = await dispatch(getToken());\n      const c = await dispatch(getEmployees());\n      setemployees(c);\n      const teams = await dispatch(getTeams());\n      const alliances = await dispatch(getAlliances());\n    } catch (err) {\n      console.log(err);\n    }\n  }, [dispatch]);\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"employee\",\n    drop: item => {\n      var x = props.state.employees.find(e => e.id === item.employee.id);\n      console.log(props.state, \"Item Droped\");\n      dispatch(addEmployeeToTeam(x, props.team));\n    }\n  }));\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: \"team\",\n    item: {\n      team: props.team\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: drag,\n      className: \"team\",\n      children: /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        isFlipped: isFlipped,\n        flipDirection: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              marginBottom: \"20px\",\n              backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n              borderRadius: \"20px\",\n              marginRight: \"10px\",\n              display: \"flex\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: props.team.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                position: \"absolute\",\n                bottom: 0,\n                right: 2,\n                opacity: 0.3,\n                color: \"red\"\n              },\n              onClick: () => {\n                dispatch(deleteTeam(props.team, props.teams));\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteTwoToneIcon, {\n                style: {\n                  color: \"red\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            display: \"inline\"\n          },\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\"\n            },\n            children: props.team.employees.length === 0 ? \"No Employees Here\" : props.team.employees.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CardHeader, {\n                  style: {\n                    display: \"flex\"\n                  },\n                  avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: e[\"Avatar\"][\"url\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, this)\n              }, e.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Team, \"SONUkSeZW4tIGO7O/H1bMF45R8c=\", false, function () {\n  return [useDispatch, useDrop, useDrag];\n});\n\n_c = Team;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps)(Team);\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Team.js"],"names":["React","useState","useEffect","ReactCardFlip","useDrop","useDrag","addEmployeeToTeam","deleteTeam","useDispatch","Card","Button","CardHeader","DeleteTwoToneIcon","Avatar","connect","getEmployees","getToken","getTeams","getAlliances","Team","props","dispatch","employees","setemployees","token","c","teams","alliances","err","console","log","isFlipped","setIsFlipped","handleClick","isOver","drop","accept","item","x","state","find","e","id","employee","team","isDragging","drag","type","collect","monitor","marginBottom","backgroundColor","borderRadius","marginRight","display","flexDirection","Name","position","bottom","right","opacity","color","flexWrap","length","map","mapStateToProps","ownProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI;AACF,YAAMsB,KAAK,GAAG,MAAMH,QAAQ,CAACL,QAAQ,EAAT,CAA5B;AACA,YAAMS,CAAC,GAAG,MAAMJ,QAAQ,CAACN,YAAY,EAAb,CAAxB;AACAQ,MAAAA,YAAY,CAACE,CAAD,CAAZ;AACA,YAAMC,KAAK,GAAG,MAAML,QAAQ,CAACJ,QAAQ,EAAT,CAA5B;AACA,YAAMU,SAAS,GAAG,MAAMN,QAAQ,CAACH,YAAY,EAAb,CAAhC;AACD,KAND,CAME,OAAOU,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAVQ,EAUN,CAACP,QAAD,CAVM,CAAT;AAWA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMgC,WAAW,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAGA,QAAM,CAAC;AAAEG,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqB/B,OAAO,CAAC,OAAO;AACxCgC,IAAAA,MAAM,EAAE,UADgC;AAExCD,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACd,UAAIC,CAAC,GAAGlB,KAAK,CAACmB,KAAN,CAAYjB,SAAZ,CAAsBkB,IAAtB,CAA4BC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,IAAI,CAACM,QAAL,CAAcD,EAAzD,CAAR;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACmB,KAAlB,EAAyB,aAAzB;AACAlB,MAAAA,QAAQ,CAACf,iBAAiB,CAACgC,CAAD,EAAIlB,KAAK,CAACwB,IAAV,CAAlB,CAAR;AACD;AANuC,GAAP,CAAD,CAAlC;AAQA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBzC,OAAO,CAAC,OAAO;AAC5C0C,IAAAA,IAAI,EAAE,MADsC;AAE5CV,IAAAA,IAAI,EAAE;AAAEO,MAAAA,IAAI,EAAExB,KAAK,CAACwB;AAAd,KAFsC;AAG5CI,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBJ,MAAAA,UAAU,EAAE,CAAC,CAACI,OAAO,CAACJ,UAAR;AADO,KAAd;AAHmC,GAAP,CAAD,CAAtC;AAQA,sBACE;AAAK,IAAA,GAAG,EAAEV,IAAV;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEW,IAAV;AAAgB,MAAA,SAAS,EAAC,MAA1B;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEf,SAA1B;AAAqC,QAAA,aAAa,EAAC,YAAnD;AAAA,gCACE;AAAK,UAAA,OAAO,EAAEE,WAAd;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,KAAK,EAAE;AACLiB,cAAAA,YAAY,EAAE,MADT;AAELC,cAAAA,eAAe,EAAE,0BAFZ;AAGLC,cAAAA,YAAY,EAAE,MAHT;AAILC,cAAAA,WAAW,EAAE,MAJR;AAKLC,cAAAA,OAAO,EAAE,MALJ;AAMLC,cAAAA,aAAa,EAAE;AANV,aADT;AAAA,oCAUE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAEnC,KAAK,CAACwB,IAAN,CAAWY;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE,QAAC,MAAD;AACE,cAAA,KAAK,EAAE;AACLC,gBAAAA,QAAQ,EAAE,UADL;AAELC,gBAAAA,MAAM,EAAE,CAFH;AAGLC,gBAAAA,KAAK,EAAE,CAHF;AAILC,gBAAAA,OAAO,EAAE,GAJJ;AAKLC,gBAAAA,KAAK,EAAE;AALF,eADT;AAQE,cAAA,OAAO,EAAE,MAAM;AACbxC,gBAAAA,QAAQ,CAACd,UAAU,CAACa,KAAK,CAACwB,IAAP,EAAaxB,KAAK,CAACM,KAAnB,CAAX,CAAR;AACD,eAVH;AAAA,qCAYE,QAAC,iBAAD;AACE,gBAAA,KAAK,EAAE;AACLmC,kBAAAA,KAAK,EAAE;AADF;AADT;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAkCE,QAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLP,YAAAA,OAAO,EAAE;AADJ,WADT;AAIE,UAAA,OAAO,EAAErB,WAJX;AAAA,iCAME;AACE,YAAA,KAAK,EAAE;AACLqB,cAAAA,OAAO,EAAE,MADJ;AAELC,cAAAA,aAAa,EAAE,KAFV;AAGLO,cAAAA,QAAQ,EAAE;AAHL,aADT;AAAA,sBAOG1C,KAAK,CAACwB,IAAN,CAAWtB,SAAX,CAAqByC,MAArB,KAAgC,CAAhC,GACG,mBADH,GAEG3C,KAAK,CAACwB,IAAN,CAAWtB,SAAX,CAAqB0C,GAArB,CAA0BvB,CAAD,IAAO;AAC9B,kCACE;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,KAAK,EAAE;AAAEa,oBAAAA,OAAO,EAAE;AAAX,mBADT;AAEE,kBAAA,MAAM,eAAE,QAAC,MAAD;AAAQ,oBAAA,GAAG,EAAEb,CAAC,CAAC,QAAD,CAAD,CAAY,KAAZ;AAAb;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;AADF,iBAAUA,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA,sBADF;AAQD,aATD;AATN;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoED;;GAxGQvB,I;UACUX,W,EAmBUJ,O,EAQIC,O;;;KA5BxBc,I;;AA0GT,MAAM8C,eAAe,GAAG,CAAC1B,KAAD,EAAQ2B,QAAR,KAAqB;AAC3C,SAAO;AACL3B,IAAAA,KAAK,EAAEA;AADF,GAAP;AAGD,CAJD;;AAKA,eAAezB,OAAO,CAACmD,eAAD,CAAP,CAAyB9C,IAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { addEmployeeToTeam } from \"../actions/teams\";\r\nimport { deleteTeam } from \"../actions/teams\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { Button } from \"@mui/material\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { connect } from \"react-redux\";\r\nimport { getEmployees } from \"../actions/employees\";\r\nimport { getToken } from \"../actions/token\";\r\nimport { getTeams } from \"../actions/teams\";\r\nimport { getAlliances } from \"../actions/alliances\";\r\nfunction Team(props) {\r\n  const dispatch = useDispatch();\r\n  const [employees, setemployees] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const token = await dispatch(getToken());\r\n      const c = await dispatch(getEmployees());\r\n      setemployees(c);\r\n      const teams = await dispatch(getTeams());\r\n      const alliances = await dispatch(getAlliances());\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [dispatch]);\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"employee\",\r\n    drop: (item) => {\r\n      var x = props.state.employees.find((e) => e.id === item.employee.id);\r\n      console.log(props.state, \"Item Droped\");\r\n      dispatch(addEmployeeToTeam(x, props.team));\r\n    },\r\n  }));\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: \"team\",\r\n    item: { team: props.team },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <div ref={drop}>\r\n      <div ref={drag} className=\"team\">\r\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n          <div onClick={handleClick}>\r\n            <Card\r\n              style={{\r\n                marginBottom: \"20px\",\r\n                backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n                borderRadius: \"20px\",\r\n                marginRight: \"10px\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <CardHeader title={props.team.Name} />\r\n              <Button\r\n                style={{\r\n                  position: \"absolute\",\r\n                  bottom: 0,\r\n                  right: 2,\r\n                  opacity: 0.3,\r\n                  color: \"red\",\r\n                }}\r\n                onClick={() => {\r\n                  dispatch(deleteTeam(props.team, props.teams));\r\n                }}\r\n              >\r\n                <DeleteTwoToneIcon\r\n                  style={{\r\n                    color: \"red\",\r\n                  }}\r\n                />\r\n              </Button>\r\n            </Card>\r\n          </div>\r\n\r\n          <Card\r\n            style={{\r\n              display: \"inline\",\r\n            }}\r\n            onClick={handleClick}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {props.team.employees.length === 0\r\n                ? \"No Employees Here\"\r\n                : props.team.employees.map((e) => {\r\n                    return (\r\n                      <div key={e.id}>\r\n                        <CardHeader\r\n                          style={{ display: \"flex\" }}\r\n                          avatar={<Avatar src={e[\"Avatar\"][\"url\"]} />}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n            </div>\r\n          </Card>\r\n        </ReactCardFlip>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Team);\r\n"]},"metadata":{},"sourceType":"module"}