{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\TeamInAlliance.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDrop, useDrag } from \"react-dnd\";\nimport { addEmployeeToTeam } from \"../helpers/functionallity/updateEmployee.js\";\nimport { deleteTeamfromalliance } from \"../actions/alliances\";\nimport Card from \"@mui/material/Card\";\nimport { Button } from \"@mui/material\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\nimport { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TeamInAlliance = props => {\n  _s();\n\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"employee\",\n    drop: item => {\n      dispatch(addEmployeeToTeam(item.employee, props.team, props.employees, props.teams));\n    }\n  }));\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  const dispatch = useDispatch();\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: \"team\",\n    item: {\n      team: props.team\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"20%\",\n      marginBottom: \"10px\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      isFlipped: isFlipped,\n      flipDirection: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          ref: drag,\n          style: {\n            backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n            borderRadius: \"20px\"\n          },\n          onClick: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: props.team.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  opacity: \"0.4\",\n                  margin: \"1vh\"\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteTwoToneIcon, {\n                  style: {\n                    position: \"absolute\",\n                    bottom: 10,\n                    right: 10,\n                    color: \"blue\"\n                  },\n                  onClick: () => {\n                    dispatch(deleteTeamfromalliance(props.team, props.teams, props.alliance));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, props.team.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          display: \"inline\"\n        },\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          children: props.team.employees.length === 0 ? \"No Employees Here\" : props.team.employees.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(CardHeader, {\n                style: {\n                  display: \"flex\"\n                },\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: props.employees.find(x => x.id === e)[\"Avatar\"][\"url\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this)\n            }, e, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TeamInAlliance, \"FvFpXHnuDCEphFNKwajWwySH810=\", false, function () {\n  return [useDrop, useDispatch, useDrag];\n});\n\n_c = TeamInAlliance;\nexport default TeamInAlliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamInAlliance\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/TeamInAlliance.js"],"names":["React","useDrop","useDrag","addEmployeeToTeam","deleteTeamfromalliance","Card","Button","CardHeader","Avatar","useSelector","useDispatch","DeleteTwoToneIcon","useState","ReactCardFlip","TeamInAlliance","props","isOver","drop","accept","item","dispatch","employee","team","employees","teams","isFlipped","setIsFlipped","handleClick","isDragging","drag","type","collect","monitor","height","marginBottom","width","backgroundColor","borderRadius","Name","opacity","margin","position","bottom","right","color","alliance","id","display","flexDirection","flexWrap","length","map","e","find","x"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { addEmployeeToTeam } from \"../helpers/functionallity/updateEmployee.js\";\r\nimport { deleteTeamfromalliance } from \"../actions/alliances\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { Button } from \"@mui/material\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\r\nimport { useState } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\n\r\nconst TeamInAlliance = (props) => {\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"employee\",\r\n    drop: (item) => {\r\n      dispatch(\r\n        addEmployeeToTeam(\r\n          item.employee,\r\n          props.team,\r\n          props.employees,\r\n          props.teams\r\n        )\r\n      );\r\n    },\r\n  }));\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: \"team\",\r\n    item: { team: props.team },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"20%\",\r\n        marginBottom: \"10px\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n        <div>\r\n          <Card\r\n            key={props.team.id}\r\n            ref={drag}\r\n            style={{\r\n              backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n              borderRadius: \"20px\",\r\n            }}\r\n            onClick={handleClick}\r\n          >\r\n            <CardHeader title={props.team.Name} />\r\n            <div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    opacity: \"0.4\",\r\n                    margin: \"1vh\",\r\n                  }}\r\n                >\r\n                  <DeleteTwoToneIcon\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 10,\r\n                      right: 10,\r\n                      color: \"blue\",\r\n                    }}\r\n                    onClick={() => {\r\n                      dispatch(\r\n                        deleteTeamfromalliance(\r\n                          props.team,\r\n                          props.teams,\r\n                          props.alliance\r\n                        )\r\n                      );\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n\r\n        <Card\r\n          style={{\r\n            display: \"inline\",\r\n          }}\r\n          onClick={handleClick}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            {props.team.employees.length === 0\r\n              ? \"No Employees Here\"\r\n              : props.team.employees.map((e) => {\r\n                  return (\r\n                    <div key={e}>\r\n                      <CardHeader\r\n                        style={{ display: \"flex\" }}\r\n                        avatar={\r\n                          <Avatar\r\n                            src={\r\n                              props.employees.find((x) => x.id === e)[\"Avatar\"][\r\n                                \"url\"\r\n                              ]\r\n                            }\r\n                          />\r\n                        }\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n          </div>\r\n        </Card>\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamInAlliance;\r\n"]},"metadata":{},"sourceType":"module"}