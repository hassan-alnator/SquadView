{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Employee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DragSource } from \"react-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemSource = {\n  beginDrag(props) {\n    return props.item;\n  },\n\n  endDrag(props, monitor) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    return props.handleDrop(props.item.id);\n  }\n\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nfunction Employee() {\n  _s();\n\n  const employees = useSelector(state => state.employees);\n  console.log(employees, \"5555555555555\");\n  const {\n    connectDragSource,\n    isDragging\n  } = this.props;\n  return connectDragSource(\n  /*#__PURE__*/\n  // parent div to hold the ul and li's\n  _jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employees.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n}\n\n_s(Employee, \"BO2mIryh9KG15dC5SJo2KG4Ne+U=\", false, function () {\n  return [useSelector];\n});\n\n_c = Employee;\nexport default DragSource(\"item\", itemSource, collect)(Employee);\n\nvar _c;\n\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Employee.js"],"names":["React","useState","useEffect","useSelector","DragSource","itemSource","beginDrag","props","item","endDrag","monitor","didDrop","handleDrop","id","collect","connect","connectDragSource","dragSource","isDragging","Employee","employees","state","console","log","map","user","Name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACf,WAAOA,KAAK,CAACC,IAAb;AACD,GAHgB;;AAIjBC,EAAAA,OAAO,CAACF,KAAD,EAAQG,OAAR,EAAiB;AACtB,QAAI,CAACA,OAAO,CAACC,OAAR,EAAL,EAAwB;AACtB;AACD;;AACD,WAAOJ,KAAK,CAACK,UAAN,CAAiBL,KAAK,CAACC,IAAN,CAAWK,EAA5B,CAAP;AACD;;AATgB,CAAnB;;AAYA,SAASC,OAAT,CAAiBC,OAAjB,EAA0BL,OAA1B,EAAmC;AACjC,SAAO;AACLM,IAAAA,iBAAiB,EAAED,OAAO,CAACE,UAAR,EADd;AAELC,IAAAA,UAAU,EAAER,OAAO,CAACQ,UAAR;AAFP,GAAP;AAID;;AACD,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,SAAS,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuB,eAAvB;AACA,QAAM;AAAEJ,IAAAA,iBAAF;AAAqBE,IAAAA;AAArB,MAAoC,KAAKX,KAA/C;AAEA,SAAOS,iBAAiB;AAAA;AACtB;AACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,gBACGI,SAAS,CAACI,GAAV,CAAeC,IAAD,iBACb;AAAA,+BACE;AAAA,oBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF,SAAUD,IAAI,CAACZ,EAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFsB,CAAxB;AAYD;;GAjBQM,Q;UACWhB,W;;;KADXgB,Q;AAmBT,eAAef,UAAU,CAAC,MAAD,EAASC,UAAT,EAAqBS,OAArB,CAAV,CAAwCK,QAAxC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DragSource } from \"react-dnd\";\r\n\r\nconst itemSource = {\r\n  beginDrag(props) {\r\n    return props.item;\r\n  },\r\n  endDrag(props, monitor) {\r\n    if (!monitor.didDrop()) {\r\n      return;\r\n    }\r\n    return props.handleDrop(props.item.id);\r\n  },\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging(),\r\n  };\r\n}\r\nfunction Employee() {\r\n  const employees = useSelector((state) => state.employees);\r\n  console.log(employees, \"5555555555555\");\r\n  const { connectDragSource, isDragging } = this.props;\r\n\r\n  return connectDragSource(\r\n    // parent div to hold the ul and li's\r\n    <div className=\"App\">\r\n      <ul>\r\n        {employees.map((user) => (\r\n          <div key={user.id}>\r\n            <p>{user.Name}</p>\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DragSource(\"item\", itemSource, collect)(Employee);\r\n"]},"metadata":{},"sourceType":"module"}