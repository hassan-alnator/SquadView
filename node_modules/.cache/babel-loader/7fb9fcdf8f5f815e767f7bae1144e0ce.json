{"ast":null,"code":"import * as fetchApi from \"../helpers/Api/fetchDataApi.js\";\nimport * as functionallity from \"../helpers/functionallity/updateTeams\";\nimport * as helperApi from \"../helpers/Api/helperApis\";\nimport store from \"../index\";\nimport alliances from \"../reducers/alliances.js\"; // action Creators\n\nexport const getTeams = () => async dispatch => {\n  try {\n    const data = await fetchApi.fetchTeams(store.getState().token);\n    dispatch({\n      type: \"FETCH_ALL_TEAMS\",\n      payload: data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const AddTeam = (teams, NewTeamName) => async dispatch => {\n  try {\n    const newTeam = await functionallity.addNewTeam(NewTeamName);\n    dispatch({\n      type: \"UPDATE_TEAMS\",\n      payload: teams.concat(newTeam)\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteTeam = (team, teams) => async dispatch => {\n  try {\n    const teamsAfterDelete = await functionallity.deleteTeam(team, teams);\n    dispatch({\n      type: \"UPDATE_TEAMS\",\n      payload: teamsAfterDelete\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const addTeamToAlliance = (team, alliance, teams) => async dispatch => {\n  console.log(team, \"team in action \");\n  console.log(alliance, \"alliance  in action \");\n  console.log(teams, \"teams  in action \");\n\n  try {\n    const teamsUpdated = await functionallity.addTeamToAlliance(team, alliance, teams);\n    dispatch({\n      type: \"UPDATE_TEAMS\",\n      payload: teamsUpdated\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getTeamsBelongToAlliance = alliance => async dispatch => {\n  try {\n    const data = await helperApi.getTeamBelongToThisAlliance(alliance);\n    dispatch({\n      type: \"FETCH_TEAMS_BELONG_TO_ALLIANCE\",\n      payload: data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/actions/teams.js"],"names":["fetchApi","functionallity","helperApi","store","alliances","getTeams","dispatch","data","fetchTeams","getState","token","type","payload","err","console","log","AddTeam","teams","NewTeamName","newTeam","addNewTeam","concat","deleteTeam","team","teamsAfterDelete","addTeamToAlliance","alliance","teamsUpdated","getTeamsBelongToAlliance","getTeamBelongToThisAlliance"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,gCAA1B;AACA,OAAO,KAAKC,cAAZ,MAAgC,uCAAhC;AACA,OAAO,KAAKC,SAAZ,MAA2B,2BAA3B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,UAAT,CAAoBL,KAAK,CAACM,QAAN,GAAiBC,KAArC,CAAnB;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,OAAO,EAAEL;AAApC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAPM;AAQP,OAAO,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB,MAAOZ,QAAP,IAAoB;AACjE,MAAI;AACF,UAAMa,OAAO,GAAG,MAAMlB,cAAc,CAACmB,UAAf,CAA0BF,WAA1B,CAAtB;AACAZ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEK,KAAK,CAACI,MAAN,CAAaF,OAAb;AAAjC,KAAD,CAAR;AACD,GAHD,CAGE,OAAON,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAPM;AAQP,OAAO,MAAMS,UAAU,GAAG,CAACC,IAAD,EAAON,KAAP,KAAiB,MAAOX,QAAP,IAAoB;AAC7D,MAAI;AACF,UAAMkB,gBAAgB,GAAG,MAAMvB,cAAc,CAACqB,UAAf,CAA0BC,IAA1B,EAAgCN,KAAhC,CAA/B;AACAX,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEY;AAAjC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOX,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAPM;AAQP,OAAO,MAAMY,iBAAiB,GAC5B,CAACF,IAAD,EAAOG,QAAP,EAAiBT,KAAjB,KAA2B,MAAOX,QAAP,IAAoB;AAC7CQ,EAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ,EAAkB,iBAAlB;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ,EAAsB,sBAAtB;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAAmB,mBAAnB;;AACA,MAAI;AACF,UAAMU,YAAY,GAAG,MAAM1B,cAAc,CAACwB,iBAAf,CACzBF,IADyB,EAEzBG,QAFyB,EAGzBT,KAHyB,CAA3B;AAKAX,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEe;AAAjC,KAAD,CAAR;AACD,GAPD,CAOE,OAAOd,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAfI;AAgBP,OAAO,MAAMe,wBAAwB,GAAIF,QAAD,IAAc,MAAOpB,QAAP,IAAoB;AACxE,MAAI;AACF,UAAMC,IAAI,GAAG,MAAML,SAAS,CAAC2B,2BAAV,CAAsCH,QAAtC,CAAnB;AACApB,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,gCAAR;AAA0CC,MAAAA,OAAO,EAAEL;AAAnD,KAAD,CAAR;AACD,GAHD,CAGE,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAPM","sourcesContent":["import * as fetchApi from \"../helpers/Api/fetchDataApi.js\";\r\nimport * as functionallity from \"../helpers/functionallity/updateTeams\";\r\nimport * as helperApi from \"../helpers/Api/helperApis\";\r\nimport store from \"../index\";\r\nimport alliances from \"../reducers/alliances.js\";\r\n// action Creators\r\nexport const getTeams = () => async (dispatch) => {\r\n  try {\r\n    const data = await fetchApi.fetchTeams(store.getState().token);\r\n    dispatch({ type: \"FETCH_ALL_TEAMS\", payload: data });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport const AddTeam = (teams, NewTeamName) => async (dispatch) => {\r\n  try {\r\n    const newTeam = await functionallity.addNewTeam(NewTeamName);\r\n    dispatch({ type: \"UPDATE_TEAMS\", payload: teams.concat(newTeam) });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport const deleteTeam = (team, teams) => async (dispatch) => {\r\n  try {\r\n    const teamsAfterDelete = await functionallity.deleteTeam(team, teams);\r\n    dispatch({ type: \"UPDATE_TEAMS\", payload: teamsAfterDelete });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport const addTeamToAlliance =\r\n  (team, alliance, teams) => async (dispatch) => {\r\n    console.log(team, \"team in action \");\r\n    console.log(alliance, \"alliance  in action \");\r\n    console.log(teams, \"teams  in action \");\r\n    try {\r\n      const teamsUpdated = await functionallity.addTeamToAlliance(\r\n        team,\r\n        alliance,\r\n        teams\r\n      );\r\n      dispatch({ type: \"UPDATE_TEAMS\", payload: teamsUpdated });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\nexport const getTeamsBelongToAlliance = (alliance) => async (dispatch) => {\r\n  try {\r\n    const data = await helperApi.getTeamBelongToThisAlliance(alliance);\r\n    dispatch({ type: \"FETCH_TEAMS_BELONG_TO_ALLIANCE\", payload: data });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}