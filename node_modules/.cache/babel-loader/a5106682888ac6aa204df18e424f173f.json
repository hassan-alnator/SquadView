{"ast":null,"code":"import axios from \"axios\";\nimport store from \"../../index\";\n\nconst addTeamToAllianceApi = async (team, alliance) => {\n  var data = JSON.stringify({\n    alliance: alliance.id\n  });\n  const team_url = `http://cms.avertra.com/teams/${team.id}`;\n  var config = {\n    method: \"put\",\n    url: team_url,\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token,\n      \"Content-Type\": \"application/json\"\n    },\n    data: data\n  };\n  axios(config).then(function (response) {\n    console.log(response.data, \"team added to alliance\");\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\n\nconst getTeamBelongToThisAlliance = async alliance => {\n  var config = {\n    method: \"get\",\n    url: `http://cms.avertra.com/teams?alliance.id=${alliance.id}`,\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token\n    }\n  };\n  axios(config).then(function (response) {\n    var teams = JSON.stringify(response.data);\n    localStorage.setItem(`${alliance.id}`, teams);\n    return response.data;\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n};\n\nconst createNewTeam = async NewTeamName => {\n  var data = JSON.stringify({\n    Name: NewTeamName\n  });\n  var config = {\n    method: \"post\",\n    url: \"http://cms.avertra.com/teams\",\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token,\n      \"Content-Type\": \"application/json\"\n    },\n    data: data\n  };\n  axios(config).then(function (response, dispatch) {\n    console.log(response.data, \"added \", NewTeamName);\n    dispatch({\n      type: \"FETCH_ALL_Teams\",\n      payload: data.concat(response.data)\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\n\nconst deleteTeam = async team_id => {\n  console.log(team);\n  var config = {\n    method: \"delete\",\n    url: `http://cms.avertra.com/teams/${team_id}`,\n    headers: {\n      Authorization: \"Bearer \" + store.getState().token\n    }\n  };\n  var that = app;\n  axios(config).then(function (response) {\n    var index = that.state.teams.indexOf(team);\n\n    if (index !== -1) {\n      that.state.teams.splice(index, 1);\n      that.setState({\n        teams: that.state.teams\n      });\n    }\n  }).catch(function (error) {\n    console.log(error);\n  }); //  helpers.deleteTeamFromAllAlliances(app, team.id);\n};\n\nexport { addTeamToAllianceApi, getTeamBelongToThisAlliance, createNewTeam };","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/helpers/Api/helperApis.js"],"names":["axios","store","addTeamToAllianceApi","team","alliance","data","JSON","stringify","id","team_url","config","method","url","headers","Authorization","getState","token","then","response","console","log","catch","error","getTeamBelongToThisAlliance","teams","localStorage","setItem","createNewTeam","NewTeamName","Name","dispatch","type","payload","concat","deleteTeam","team_id","that","app","index","state","indexOf","splice","setState"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport store from \"../../index\";\r\n\r\nconst addTeamToAllianceApi = async (team, alliance) => {\r\n  var data = JSON.stringify({\r\n    alliance: alliance.id,\r\n  });\r\n  const team_url = `http://cms.avertra.com/teams/${team.id}`;\r\n\r\n  var config = {\r\n    method: \"put\",\r\n    url: team_url,\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: data,\r\n  };\r\n\r\n  axios(config)\r\n    .then(function (response) {\r\n      console.log(response.data, \"team added to alliance\");\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nconst getTeamBelongToThisAlliance = async (alliance) => {\r\n  var config = {\r\n    method: \"get\",\r\n    url: `http://cms.avertra.com/teams?alliance.id=${alliance.id}`,\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n    },\r\n  };\r\n  axios(config)\r\n    .then(function (response) {\r\n      var teams = JSON.stringify(response.data);\r\n      localStorage.setItem(`${alliance.id}`, teams);\r\n\r\n      return response.data;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      return [];\r\n    });\r\n};\r\nconst createNewTeam = async (NewTeamName) => {\r\n  var data = JSON.stringify({\r\n    Name: NewTeamName,\r\n  });\r\n  var config = {\r\n    method: \"post\",\r\n    url: \"http://cms.avertra.com/teams\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: data,\r\n  };\r\n\r\n  axios(config)\r\n    .then(function (response, dispatch) {\r\n      console.log(response.data, \"added \", NewTeamName);\r\n      dispatch({\r\n        type: \"FETCH_ALL_Teams\",\r\n        payload: data.concat(response.data),\r\n      });\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nconst deleteTeam = async (team_id) => {\r\n  console.log(team);\r\n  var config = {\r\n    method: \"delete\",\r\n    url: `http://cms.avertra.com/teams/${team_id}`,\r\n    headers: {\r\n      Authorization: \"Bearer \" + store.getState().token,\r\n    },\r\n  };\r\n  var that = app;\r\n  axios(config)\r\n    .then(function (response) {\r\n      var index = that.state.teams.indexOf(team);\r\n      if (index !== -1) {\r\n        that.state.teams.splice(index, 1);\r\n        that.setState({\r\n          teams: that.state.teams,\r\n        });\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  //  helpers.deleteTeamFromAllAlliances(app, team.id);\r\n};\r\n\r\nexport { addTeamToAllianceApi, getTeamBelongToThisAlliance, createNewTeam };\r\n"]},"metadata":{},"sourceType":"module"}