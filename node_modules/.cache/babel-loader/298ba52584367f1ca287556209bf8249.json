{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Team.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { useDrop, useDrag } from \"react-dnd\";\nimport { addEmployeeToTeam } from \"../actions/teams\";\nimport { deleteTeam } from \"../actions/teams\";\nimport { useDispatch } from \"react-redux\";\nimport Card from \"@mui/material/Card\";\nimport { Button } from \"@mui/material\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Team(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"employee\",\n    drop: item => {\n      var x = props.state.employees.find(e => e.id === item.employee.id);\n      console.log(props.state, \"Item Droped\");\n      dispatch(addEmployeeToTeam(x, props.team));\n    }\n  }));\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: \"team\",\n    item: {\n      team: props.team\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: drag,\n      className: \"team\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            marginBottom: \"20px\",\n            backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n            borderRadius: \"20px\",\n            marginRight: \"10px\",\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: props.team.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              position: \"absolute\",\n              bottom: 0,\n              right: 2,\n              opacity: 0.3,\n              color: \"red\"\n            },\n            onClick: () => {\n              dispatch(deleteTeam(props.team, props.teams));\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteTwoToneIcon, {\n              style: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Team, \"b7efsklKA9Qc3e756ygOgYsxx2s=\", false, function () {\n  return [useDispatch, useDrop, useDrag];\n});\n\n_c = Team;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps)(Team);\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Team.js"],"names":["React","useState","useEffect","ReactCardFlip","useDrop","useDrag","addEmployeeToTeam","deleteTeam","useDispatch","Card","Button","CardHeader","DeleteTwoToneIcon","Avatar","connect","Team","props","dispatch","isOver","drop","accept","item","x","state","employees","find","e","id","employee","console","log","team","isDragging","drag","type","collect","monitor","handleClick","marginBottom","backgroundColor","borderRadius","marginRight","display","flexDirection","Name","position","bottom","right","opacity","color","teams","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { addEmployeeToTeam } from \"../actions/teams\";\r\nimport { deleteTeam } from \"../actions/teams\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { Button } from \"@mui/material\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Team(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"employee\",\r\n    drop: (item) => {\r\n      var x = props.state.employees.find((e) => e.id === item.employee.id);\r\n      console.log(props.state, \"Item Droped\");\r\n      dispatch(addEmployeeToTeam(x, props.team));\r\n    },\r\n  }));\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: \"team\",\r\n    item: { team: props.team },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <div ref={drop}>\r\n      <div ref={drag} className=\"team\">\r\n        <div onClick={handleClick}>\r\n          <Card\r\n            style={{\r\n              marginBottom: \"20px\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n              borderRadius: \"20px\",\r\n              marginRight: \"10px\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <CardHeader title={props.team.Name} />\r\n            <Button\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                right: 2,\r\n                opacity: 0.3,\r\n                color: \"red\",\r\n              }}\r\n              onClick={() => {\r\n                dispatch(deleteTeam(props.team, props.teams));\r\n              }}\r\n            >\r\n              <DeleteTwoToneIcon\r\n                style={{\r\n                  color: \"red\",\r\n                }}\r\n              />\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Team);\r\n"]},"metadata":{},"sourceType":"module"}