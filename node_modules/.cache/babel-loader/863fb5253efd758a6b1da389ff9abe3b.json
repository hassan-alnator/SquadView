{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\DragDrop.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import Employee from \"./Employee\";\n// import Team from \"./Team\";\n// import Alliance from \"./Alliance\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import TextField from \"@material-ui/core/TextField\";\n// import { Button } from \"@mui/material\";\n// import { AddTeam } from \"../actions/teams\";\n// import Grid from \"@mui/material/Grid\";\n// import \"../styles/App.css\";\n// function DragDrop() {\n//   const dispatch = useDispatch();\n//   const teams = useSelector((state) => {\n//     return state.teams;\n//   });\n//   var t = teams.filter((t) => {\n//     return t.alliance === undefined;\n//   });\n//   console.log(teams, \"TEAMS Drag and DROP\");\n//   console.log(t, \"t Drag and DROP\");\n//   const [searchField, setsearchField] = useState(\"\");\n//   const [NewTeamName, setNewTeamName] = useState(\"\");\n//   const employees = useSelector((state) => state.employees);\n//   const alliances = useSelector((state) => state.alliances);\n//   const filteredEmployees = employees.filter((emp) =>\n//     emp[\"Name\"].toLowerCase().includes(searchField.toLowerCase())\n//   );\n//   return (\n//     <Grid\n//       container\n//       direction=\"column\"\n//       justifyContent=\"space-around\"\n//       alignItems=\"stretch\"\n//     >\n//       {/* <div className=\"dnd\"> */}\n//       <Grid item xs>\n//         <TextField\n//           id=\"standard-basic\"\n//           fullWidth\n//           label=\"Search Employee\"\n//           variant=\"standard\"\n//           onChange={(e) => setsearchField(e.target.value)}\n//         />\n//         <div className=\"employees\">\n//           {filteredEmployees.map((employee) => {\n//             return <Employee key={employee.id} employee={employee} />;\n//           })}\n//         </div>\n//       </Grid>\n//       <div>\n//         <Grid item xs>\n//           <TextField\n//             id=\"standard-basic\"\n//             label=\"Team Name\"\n//             variant=\"standard\"\n//             value={NewTeamName}\n//             onChange={(e) => {\n//               setNewTeamName(e.target.value);\n//             }}\n//           />\n//           <Button\n//             onClick={() => {\n//               dispatch(AddTeam(teams, NewTeamName));\n//               setNewTeamName(\"\");\n//             }}\n//           >\n//             Add Team\n//           </Button>\n//         </Grid>\n//         <Grid item xs>\n//           {t.map((team) => {\n//             return <Team key={team.id} team={team} />;\n//           })}\n//         </Grid>\n//       </div>\n//       <div>\n//         {alliances.map((alliance) => {\n//           return (\n//             <Alliance key={alliance.id} alliance={alliance} teams={teams} />\n//           );\n//         })}\n//       </div>\n//       {/* </div> */}\n//     </Grid>\n//   );\n// }\n// export default DragDrop;\nimport \"./styles.scss\";\nimport data from \"./fruits.json\";\nimport Employee from \"./Employee\";\nimport Team from \"./Team\";\nimport Alliance from \"./Alliance\";\nimport { useState, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  let scrl = useRef(null);\n  const [scrollX, setscrollX] = useState(0);\n  const [scrolEnd, setscrolEnd] = useState(false); //Slide click\n\n  const slide = shift => {\n    scrl.current.scrollLeft += shift;\n    setscrollX(scrollX + shift);\n\n    if (Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <= scrl.current.offsetWidth) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n  }; //Anim\n\n\n  const anim = e => {\n    gsap.from(e.target, {\n      scale: 1\n    });\n    gsap.to(e.target, {\n      scale: 1.5\n    });\n  };\n\n  const anim2 = e => {\n    gsap.from(e.target, {\n      scale: 1.5\n    });\n    gsap.to(e.target, {\n      scale: 1\n    });\n  };\n\n  const scrollCheck = () => {\n    setscrollX(scrl.current.scrollLeft);\n\n    if (Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <= scrl.current.offsetWidth) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [scrollX !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"prev\",\n      onClick: () => slide(-50),\n      onMouseEnter: e => anim(e),\n      onMouseLeave: e => anim2(e),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-angle-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: scrl,\n      onScroll: scrollCheck,\n      children: data.fruits.map((d, i) => /*#__PURE__*/_jsxDEV(Tag, {\n        data: d\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), !scrolEnd && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next\",\n      onClick: () => slide(+50),\n      onMouseEnter: e => anim(e),\n      onMouseLeave: e => anim2(e),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-angle-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tFy7N9vf1ECDzwfq4DSV81AslEw=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/DragDrop.js"],"names":["data","Employee","Team","Alliance","useState","useRef","gsap","App","scrl","scrollX","setscrollX","scrolEnd","setscrolEnd","slide","shift","current","scrollLeft","Math","floor","scrollWidth","offsetWidth","anim","e","from","target","scale","to","anim2","scrollCheck","fruits","map","d","i"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAO,eAAP;AACA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,MAAIC,IAAI,GAAGH,MAAM,CAAC,IAAD,CAAjB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC,CAH4B,CAK5B;;AACA,QAAMS,KAAK,GAAIC,KAAD,IAAW;AACvBN,IAAAA,IAAI,CAACO,OAAL,CAAaC,UAAb,IAA2BF,KAA3B;AACAJ,IAAAA,UAAU,CAACD,OAAO,GAAGK,KAAX,CAAV;;AAEA,QACEG,IAAI,CAACC,KAAL,CAAWV,IAAI,CAACO,OAAL,CAAaI,WAAb,GAA2BX,IAAI,CAACO,OAAL,CAAaC,UAAnD,KACAR,IAAI,CAACO,OAAL,CAAaK,WAFf,EAGE;AACAR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALD,MAKO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAZD,CAN4B,CAoB5B;;;AACA,QAAMS,IAAI,GAAIC,CAAD,IAAO;AAClBhB,IAAAA,IAAI,CAACiB,IAAL,CAAUD,CAAC,CAACE,MAAZ,EAAoB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAApB;AACAnB,IAAAA,IAAI,CAACoB,EAAL,CAAQJ,CAAC,CAACE,MAAV,EAAkB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlB;AACD,GAHD;;AAIA,QAAME,KAAK,GAAIL,CAAD,IAAO;AACnBhB,IAAAA,IAAI,CAACiB,IAAL,CAAUD,CAAC,CAACE,MAAZ,EAAoB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAApB;AACAnB,IAAAA,IAAI,CAACoB,EAAL,CAAQJ,CAAC,CAACE,MAAV,EAAkB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlB;AACD,GAHD;;AAKA,QAAMG,WAAW,GAAG,MAAM;AACxBlB,IAAAA,UAAU,CAACF,IAAI,CAACO,OAAL,CAAaC,UAAd,CAAV;;AACA,QACEC,IAAI,CAACC,KAAL,CAAWV,IAAI,CAACO,OAAL,CAAaI,WAAb,GAA2BX,IAAI,CAACO,OAAL,CAAaC,UAAnD,KACAR,IAAI,CAACO,OAAL,CAAaK,WAFf,EAGE;AACAR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALD,MAKO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGH,OAAO,KAAK,CAAZ,iBACC;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAE,MAAMI,KAAK,CAAC,CAAC,EAAF,CAFtB;AAGE,MAAA,YAAY,EAAGS,CAAD,IAAOD,IAAI,CAACC,CAAD,CAH3B;AAIE,MAAA,YAAY,EAAGA,CAAD,IAAOK,KAAK,CAACL,CAAD,CAJ5B;AAAA,6BAME;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWE;AAAI,MAAA,GAAG,EAAEd,IAAT;AAAe,MAAA,QAAQ,EAAEoB,WAAzB;AAAA,gBACG5B,IAAI,CAAC6B,MAAL,CAAYC,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,kBACf,QAAC,GAAD;AAAK,QAAA,IAAI,EAAED;AAAX,SAAmBC,CAAnB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAXF,EAgBG,CAACrB,QAAD,iBACC;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAE,MAAME,KAAK,CAAC,CAAC,EAAF,CAFtB;AAGE,MAAA,YAAY,EAAGS,CAAD,IAAOD,IAAI,CAACC,CAAD,CAH3B;AAIE,MAAA,YAAY,EAAGA,CAAD,IAAOK,KAAK,CAACL,CAAD,CAJ5B;AAAA,6BAME;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAvEuBf,G;;KAAAA,G","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Employee from \"./Employee\";\r\n// import Team from \"./Team\";\r\n// import Alliance from \"./Alliance\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import { Button } from \"@mui/material\";\r\n// import { AddTeam } from \"../actions/teams\";\r\n// import Grid from \"@mui/material/Grid\";\r\n// import \"../styles/App.css\";\r\n// function DragDrop() {\r\n//   const dispatch = useDispatch();\r\n//   const teams = useSelector((state) => {\r\n//     return state.teams;\r\n//   });\r\n//   var t = teams.filter((t) => {\r\n//     return t.alliance === undefined;\r\n//   });\r\n//   console.log(teams, \"TEAMS Drag and DROP\");\r\n//   console.log(t, \"t Drag and DROP\");\r\n//   const [searchField, setsearchField] = useState(\"\");\r\n//   const [NewTeamName, setNewTeamName] = useState(\"\");\r\n//   const employees = useSelector((state) => state.employees);\r\n//   const alliances = useSelector((state) => state.alliances);\r\n//   const filteredEmployees = employees.filter((emp) =>\r\n//     emp[\"Name\"].toLowerCase().includes(searchField.toLowerCase())\r\n//   );\r\n\r\n//   return (\r\n//     <Grid\r\n//       container\r\n//       direction=\"column\"\r\n//       justifyContent=\"space-around\"\r\n//       alignItems=\"stretch\"\r\n//     >\r\n//       {/* <div className=\"dnd\"> */}\r\n//       <Grid item xs>\r\n//         <TextField\r\n//           id=\"standard-basic\"\r\n//           fullWidth\r\n//           label=\"Search Employee\"\r\n//           variant=\"standard\"\r\n//           onChange={(e) => setsearchField(e.target.value)}\r\n//         />\r\n//         <div className=\"employees\">\r\n//           {filteredEmployees.map((employee) => {\r\n//             return <Employee key={employee.id} employee={employee} />;\r\n//           })}\r\n//         </div>\r\n//       </Grid>\r\n//       <div>\r\n//         <Grid item xs>\r\n//           <TextField\r\n//             id=\"standard-basic\"\r\n//             label=\"Team Name\"\r\n//             variant=\"standard\"\r\n//             value={NewTeamName}\r\n//             onChange={(e) => {\r\n//               setNewTeamName(e.target.value);\r\n//             }}\r\n//           />\r\n//           <Button\r\n//             onClick={() => {\r\n//               dispatch(AddTeam(teams, NewTeamName));\r\n//               setNewTeamName(\"\");\r\n//             }}\r\n//           >\r\n//             Add Team\r\n//           </Button>\r\n//         </Grid>\r\n//         <Grid item xs>\r\n//           {t.map((team) => {\r\n//             return <Team key={team.id} team={team} />;\r\n//           })}\r\n//         </Grid>\r\n//       </div>\r\n//       <div>\r\n//         {alliances.map((alliance) => {\r\n//           return (\r\n//             <Alliance key={alliance.id} alliance={alliance} teams={teams} />\r\n//           );\r\n//         })}\r\n//       </div>\r\n//       {/* </div> */}\r\n//     </Grid>\r\n//   );\r\n// }\r\n\r\n// export default DragDrop;\r\nimport \"./styles.scss\";\r\nimport data from \"./fruits.json\";\r\nimport Employee from \"./Employee\";\r\nimport Team from \"./Team\";\r\nimport Alliance from \"./Alliance\";\r\nimport { useState, useRef } from \"react\";\r\nimport gsap from \"gsap\";\r\n\r\nexport default function App() {\r\n  let scrl = useRef(null);\r\n  const [scrollX, setscrollX] = useState(0);\r\n  const [scrolEnd, setscrolEnd] = useState(false);\r\n\r\n  //Slide click\r\n  const slide = (shift) => {\r\n    scrl.current.scrollLeft += shift;\r\n    setscrollX(scrollX + shift);\r\n\r\n    if (\r\n      Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <=\r\n      scrl.current.offsetWidth\r\n    ) {\r\n      setscrolEnd(true);\r\n    } else {\r\n      setscrolEnd(false);\r\n    }\r\n  };\r\n\r\n  //Anim\r\n  const anim = (e) => {\r\n    gsap.from(e.target, { scale: 1 });\r\n    gsap.to(e.target, { scale: 1.5 });\r\n  };\r\n  const anim2 = (e) => {\r\n    gsap.from(e.target, { scale: 1.5 });\r\n    gsap.to(e.target, { scale: 1 });\r\n  };\r\n\r\n  const scrollCheck = () => {\r\n    setscrollX(scrl.current.scrollLeft);\r\n    if (\r\n      Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <=\r\n      scrl.current.offsetWidth\r\n    ) {\r\n      setscrolEnd(true);\r\n    } else {\r\n      setscrolEnd(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {scrollX !== 0 && (\r\n        <button\r\n          className=\"prev\"\r\n          onClick={() => slide(-50)}\r\n          onMouseEnter={(e) => anim(e)}\r\n          onMouseLeave={(e) => anim2(e)}\r\n        >\r\n          <i className=\"fa fa-angle-left\"></i>\r\n        </button>\r\n      )}\r\n      <ul ref={scrl} onScroll={scrollCheck}>\r\n        {data.fruits.map((d, i) => (\r\n          <Tag data={d} key={i} />\r\n        ))}\r\n      </ul>\r\n      {!scrolEnd && (\r\n        <button\r\n          className=\"next\"\r\n          onClick={() => slide(+50)}\r\n          onMouseEnter={(e) => anim(e)}\r\n          onMouseLeave={(e) => anim2(e)}\r\n        >\r\n          <i className=\"fa fa-angle-right\"></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}