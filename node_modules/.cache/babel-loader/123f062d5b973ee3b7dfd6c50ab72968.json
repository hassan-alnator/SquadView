{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Alliance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDrop, useDrag } from \"react-dnd\";\nimport { addTeamToAlliance } from \"../actions/teams\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport store from \"../index\";\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis.js\";\nimport { useDispatch } from \"react-redux\";\nimport T from \"./T\";\nimport { Container, Col, Card } from \"react-bootstrap\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { color } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alliance(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [teams, setTeams] = useState(props.teams);\n  useEffect(async () => {\n    try {\n      setTeams(await getTeamBelongToThisAlliance(props.alliance));\n    } catch (err) {\n      console.log(err);\n    }\n  }, [teams]);\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"team\",\n    drop: item => {\n      dispatch(addTeamToAlliance(item.team, props.alliance, teams));\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n      borderRadius: \"20px\"\n    },\n    children: [props.alliance.Name, /*#__PURE__*/_jsxDEV(Container, {\n      className: \"teamsInAlliance\",\n      ref: drop,\n      children: teams.map(team => {\n        return /*#__PURE__*/_jsxDEV(TeamInAlliance, {\n          team: team,\n          teams: teams\n        }, team.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Alliance, \"UU1xKzOfi2013q6vdDkOCjiTNUA=\", false, function () {\n  return [useDispatch, useDrop];\n});\n\n_c = Alliance;\nexport default Alliance; // export default function Alliance(props) {\n//   console.log(props.teams, \"teamss\");\n//   const dispatch = useDispatch();\n//   const [teams, setTeams] = useState(props.teams);\n//   useEffect(async () => {\n//     try {\n//       setTeams(await getTeamBelongToThisAlliance(props.alliance));\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   }, [teams]);\n//   const [{ isOver }, drop] = useDrop(() => ({\n//     accept: \"team\",\n//     drop: (item) => {\n//       dispatch(addTeamToAlliance(item.team, props.alliance, teams));\n//     },\n//   }));\n//   const columns = [{ field: \"Name\", headerName: \" \", width: 200 }];\n//   return (\n//     <div className=\"alliances\">\n//       <div className=\"data-grid-container\" ref={drop}>\n//         <DataGrid\n//           style={{ border: \"none\", marginRight: \"10px\" }}\n//           className=\"alliance\"\n//           rows={teams}\n//           columns={columns}\n//           pageSize={4}\n//           rowsPerPageOptions={[4]}\n//         ></DataGrid>\n//       </div>\n//     </div>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Alliance\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Alliance.js"],"names":["React","useEffect","useState","useDrop","useDrag","addTeamToAlliance","List","ListItem","store","getTeamBelongToThisAlliance","useDispatch","T","Container","Col","Card","DataGrid","color","Alliance","props","dispatch","teams","setTeams","alliance","err","console","log","isOver","drop","accept","item","team","backgroundColor","borderRadius","Name","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,2BAAT,QAA4C,8BAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,CAAP,MAAc,KAAd;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,iBAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,aAAtB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAACgB,KAAK,CAACE,KAAP,CAAlC;AAEAnB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI;AACFoB,MAAAA,QAAQ,CAAC,MAAMZ,2BAA2B,CAACS,KAAK,CAACI,QAAP,CAAlC,CAAR;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GANQ,EAMN,CAACH,KAAD,CANM,CAAT;AAQA,QAAM,CAAC;AAAEM,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBxB,OAAO,CAAC,OAAO;AACxCyB,IAAAA,MAAM,EAAE,MADgC;AAExCD,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACdV,MAAAA,QAAQ,CAACd,iBAAiB,CAACwB,IAAI,CAACC,IAAN,EAAYZ,KAAK,CAACI,QAAlB,EAA4BF,KAA5B,CAAlB,CAAR;AACD;AAJuC,GAAP,CAAD,CAAlC;AAOA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,eAAe,EAAE,0BADZ;AAELC,MAAAA,YAAY,EAAE;AAFT,KADT;AAAA,eAMGd,KAAK,CAACI,QAAN,CAAeW,IANlB,eAOE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAuC,MAAA,GAAG,EAAEN,IAA5C;AAAA,gBACGP,KAAK,CAACc,GAAN,CAAWJ,IAAD,IAAU;AACnB,4BAAO,QAAC,cAAD;AAA8B,UAAA,IAAI,EAAEA,IAApC;AAA0C,UAAA,KAAK,EAAEV;AAAjD,WAAqBU,IAAI,CAACK,EAA1B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlCQlB,Q;UACUP,W,EAWUP,O;;;KAZpBc,Q;AAmCT,eAAeA,QAAf,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { addTeamToAlliance } from \"../actions/teams\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport store from \"../index\";\r\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport T from \"./T\";\r\nimport { Container, Col, Card } from \"react-bootstrap\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { color } from \"@mui/system\";\r\n\r\nfunction Alliance(props) {\r\n  const dispatch = useDispatch();\r\n  const [teams, setTeams] = useState(props.teams);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      setTeams(await getTeamBelongToThisAlliance(props.alliance));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [teams]);\r\n\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"team\",\r\n    drop: (item) => {\r\n      dispatch(addTeamToAlliance(item.team, props.alliance, teams));\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n        borderRadius: \"20px\",\r\n      }}\r\n    >\r\n      {props.alliance.Name}\r\n      <Container className=\"teamsInAlliance\" ref={drop}>\r\n        {teams.map((team) => {\r\n          return <TeamInAlliance key={team.id} team={team} teams={teams} />;\r\n        })}\r\n      </Container>\r\n    </Card>\r\n  );\r\n}\r\nexport default Alliance;\r\n// export default function Alliance(props) {\r\n//   console.log(props.teams, \"teamss\");\r\n//   const dispatch = useDispatch();\r\n//   const [teams, setTeams] = useState(props.teams);\r\n\r\n//   useEffect(async () => {\r\n//     try {\r\n//       setTeams(await getTeamBelongToThisAlliance(props.alliance));\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   }, [teams]);\r\n\r\n//   const [{ isOver }, drop] = useDrop(() => ({\r\n//     accept: \"team\",\r\n//     drop: (item) => {\r\n//       dispatch(addTeamToAlliance(item.team, props.alliance, teams));\r\n//     },\r\n//   }));\r\n//   const columns = [{ field: \"Name\", headerName: \" \", width: 200 }];\r\n\r\n//   return (\r\n//     <div className=\"alliances\">\r\n//       <div className=\"data-grid-container\" ref={drop}>\r\n//         <DataGrid\r\n//           style={{ border: \"none\", marginRight: \"10px\" }}\r\n//           className=\"alliance\"\r\n//           rows={teams}\r\n//           columns={columns}\r\n//           pageSize={4}\r\n//           rowsPerPageOptions={[4]}\r\n//         ></DataGrid>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}