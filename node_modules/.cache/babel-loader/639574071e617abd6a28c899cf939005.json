{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Alliance.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { addTeamToAlliance } from \"../helpers/functionallity/teamAlliance\";\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport alliances from \"../reducers/alliances\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alliance(props) {\n  _s();\n\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"team\",\n    drop: item => {\n      addTeamToAlliance(item.team, props.alliance);\n    }\n  }));\n  let teams = JSON.parse(localStorage.getItem(`${props.alliance.id}`)) || [];\n  console.log(teams, \"teamssssssss\");\n  useEffect(async () => {\n    try {\n      const token = await dispatch(getToken());\n      const employees = await dispatch(getEmployees());\n      const teams = await dispatch(getTeams());\n      const alliances = await dispatch(getAlliances());\n    } catch (err) {\n      console.log(err);\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"alliance\",\n    ref: drop,\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: props.alliance.Name[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: props.alliance.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: teams.map(team => {\n          // return <Team key={team.id} team={team} />;\n          {\n            /* nested list */\n          }\n\n          /*#__PURE__*/\n          _jsxDEV(List, {\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: team.Name[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: team.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this);\n\n          {\n            /* nested list */\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Alliance, \"qnG+gXTNke131kmDyW2upLFTY5U=\", false, function () {\n  return [useDrop];\n});\n\n_c = Alliance;\nexport default Alliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alliance\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Alliance.js"],"names":["React","useDrop","addTeamToAlliance","getTeamBelongToThisAlliance","List","ListItem","ListItemText","ListItemAvatar","Avatar","alliances","Alliance","props","isOver","drop","accept","item","team","alliance","teams","JSON","parse","localStorage","getItem","id","console","log","useEffect","token","dispatch","getToken","employees","getEmployees","getTeams","getAlliances","err","Name","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,2BAAT,QAA4C,2BAA5C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBZ,OAAO,CAAC,OAAO;AACxCa,IAAAA,MAAM,EAAE,MADgC;AAExCD,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACdb,MAAAA,iBAAiB,CAACa,IAAI,CAACC,IAAN,EAAYL,KAAK,CAACM,QAAlB,CAAjB;AACD;AAJuC,GAAP,CAAD,CAAlC;AAMA,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,GAAEX,KAAK,CAACM,QAAN,CAAeM,EAAG,EAA1C,CAAX,KAA4D,EAAxE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmB,cAAnB;AAEEQ,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI;AACF,YAAMC,KAAK,GAAG,MAAMC,QAAQ,CAACC,QAAQ,EAAT,CAA5B;AACA,YAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,YAAY,EAAb,CAAhC;AACA,YAAMb,KAAK,GAAG,MAAMU,QAAQ,CAACI,QAAQ,EAAT,CAA5B;AACA,YAAMvB,SAAS,GAAG,MAAMmB,QAAQ,CAACK,YAAY,EAAb,CAAhC;AACD,KALD,CAKE,OAAOC,GAAP,EAAY;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD;AACF,GATQ,EASN,CAACN,QAAD,CATM,CAAT;AAUF,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,GAAG,EAAEf,IAAhC;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,cAAD;AAAA,+BACE,QAAC,MAAD;AAAA,oBAASF,KAAK,CAACM,QAAN,CAAekB,IAAf,CAAoB,CAApB;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAExB,KAAK,CAACM,QAAN,CAAekB;AAAtC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kBACGjB,KAAK,CAACkB,GAAN,CAAWpB,IAAD,IAAU;AACnB;AAEA;AACE;AACD;;AACD;AAAA,kBAAC,IAAD;AAAA,mCACE,QAAC,QAAD;AAAA,sCACE,QAAC,cAAD;AAAA,uCACE,QAAC,MAAD;AAAA,4BAASA,IAAI,CAACmB,IAAL,CAAU,CAAV;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,YAAD;AAAc,gBAAA,OAAO,EAAEnB,IAAI,CAACmB;AAA5B;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;;AAQA;AACE;AACD;AACF,SAjBA;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAlDQzB,Q;UACoBT,O;;;KADpBS,Q;AAmDT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { addTeamToAlliance } from \"../helpers/functionallity/teamAlliance\";\r\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport alliances from \"../reducers/alliances\";\r\nfunction Alliance(props) {\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"team\",\r\n    drop: (item) => {\r\n      addTeamToAlliance(item.team, props.alliance);\r\n    },\r\n  }));\r\n  let teams = JSON.parse(localStorage.getItem(`${props.alliance.id}`)) || [];\r\n  console.log(teams, \"teamssssssss\");\r\n\r\n    useEffect(async () => {\r\n      try {\r\n        const token = await dispatch(getToken());\r\n        const employees = await dispatch(getEmployees());\r\n        const teams = await dispatch(getTeams());\r\n        const alliances = await dispatch(getAlliances());\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }, [dispatch]);\r\n  return (\r\n    <List className=\"alliance\" ref={drop}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>{props.alliance.Name[0]}</Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={props.alliance.Name} />\r\n        <div>\r\n          {teams.map((team) => {\r\n            // return <Team key={team.id} team={team} />;\r\n\r\n            {\r\n              /* nested list */\r\n            }\r\n            <List>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>{team.Name[0]}</Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={team.Name} />\r\n              </ListItem>\r\n            </List>;\r\n            {\r\n              /* nested list */\r\n            }\r\n          })}\r\n        </div>\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\nexport default Alliance;\r\n"]},"metadata":{},"sourceType":"module"}