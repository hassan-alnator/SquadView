{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Downloads\\\\New folder (11)\\\\New folder - Copy\\\\allocation_widget\\\\src\\\\components\\\\TeamInAlliance.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDrop, useDrag } from \"react-dnd\";\nimport { addEmployeeToTeam } from \"../actions/teams\";\nimport { deleteTeamfromalliance } from \"../actions/alliances\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { useDispatch } from \"react-redux\";\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TeamInAlliance = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"employee\",\n    drop: item => {\n      dispatch(addEmployeeToTeam(item.employee, props.team, props.employees, props.teams));\n    }\n  }));\n  const [{\n    isDragging2\n  }, drag2] = useDrag(() => ({\n    type: \"team\",\n    item: {\n      team: props.team\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: \"team\",\n    item: {\n      team: props.team\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"20%\",\n        marginBottom: \"10px\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          ref: drag,\n          style: {\n            backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n            borderRadius: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: props.team.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  opacity: \"0.4\",\n                  margin: \"1vh\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\"\n            },\n            children: props.team.employees.length === 0 ? \"No Employees Here\" : props.team.employees.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  style: {\n                    display: \"flex\"\n                  },\n                  avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: props.employees.find(x => x.id === e)[\"Avatar\"][\"url\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(DeleteTwoToneIcon, {\n                  style: {\n                    color: \"blue\"\n                  },\n                  onClick: () => {\n                    dispatch(deleteTeamfromalliance(props.team, props.teams, props.alliance));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 25\n                }, this)]\n              }, e, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, props.team.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TeamInAlliance, \"jFU8vDFT+AlQaloAhm+ZyHC78CA=\", false, function () {\n  return [useDispatch, useDrop, useDrag, useDrag];\n});\n\n_c = TeamInAlliance;\nexport default TeamInAlliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamInAlliance\");","map":{"version":3,"sources":["C:/Users/salaqaily/Downloads/New folder (11)/New folder - Copy/allocation_widget/src/components/TeamInAlliance.js"],"names":["React","useDrop","useDrag","addEmployeeToTeam","deleteTeamfromalliance","Card","CardHeader","Avatar","useDispatch","DeleteTwoToneIcon","useState","TeamInAlliance","props","dispatch","isOver","drop","accept","item","employee","team","employees","teams","isDragging2","drag2","type","collect","monitor","isDragging","drag","height","marginBottom","width","backgroundColor","borderRadius","Name","opacity","margin","display","flexDirection","flexWrap","length","map","e","find","x","id","color","alliance"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { addEmployeeToTeam } from \"../actions/teams\";\r\nimport { deleteTeamfromalliance } from \"../actions/alliances\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\r\nimport { useState } from \"react\";\r\n\r\nconst TeamInAlliance = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"employee\",\r\n    drop: (item) => {\r\n      dispatch(\r\n        addEmployeeToTeam(\r\n          item.employee,\r\n          props.team,\r\n          props.employees,\r\n          props.teams\r\n        )\r\n      );\r\n    },\r\n  }));\r\n  const [{ isDragging2 }, drag2] = useDrag(() => ({\r\n    type: \"team\",\r\n    item: { team: props.team },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: \"team\",\r\n    item: { team: props.team },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n  return (\r\n    <div ref={drop}>\r\n      <div\r\n        style={{\r\n          height: \"20%\",\r\n          marginBottom: \"10px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <div>\r\n          <Card\r\n            key={props.team.id}\r\n            ref={drag}\r\n            style={{\r\n              backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n              borderRadius: \"20px\",\r\n            }}\r\n          >\r\n            <CardHeader title={props.team.Name} />\r\n            <div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    opacity: \"0.4\",\r\n                    margin: \"1vh\",\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {props.team.employees.length === 0\r\n                ? \"No Employees Here\"\r\n                : props.team.employees.map((e) => {\r\n                    return (\r\n                      <div key={e}>\r\n                        <CardHeader\r\n                          style={{ display: \"flex\" }}\r\n                          avatar={\r\n                            <Avatar\r\n                              src={\r\n                                props.employees.find((x) => x.id === e)[\r\n                                  \"Avatar\"\r\n                                ][\"url\"]\r\n                              }\r\n                            />\r\n                          }\r\n                        />\r\n                        <DeleteTwoToneIcon\r\n                          style={{\r\n                            \r\n                            color: \"blue\",\r\n                          }}\r\n                          onClick={() => {\r\n                            dispatch(\r\n                              deleteTeamfromalliance(\r\n                                props.team,\r\n                                props.teams,\r\n                                props.alliance\r\n                              )\r\n                            );\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamInAlliance;\r\n"]},"metadata":{},"sourceType":"module"}