{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Alliance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { addTeamToAlliance } from \"../helpers/functionallity/teamAlliance\";\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport alliances from \"../reducers/alliances\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alliance(props) {\n  _s();\n\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"team\",\n    drop: item => {\n      addTeamToAlliance(item.team, props.alliance);\n    }\n  }));\n  let teams = JSON.parse(localStorage.getItem(`${props.alliance.id}`)) || [];\n  console.log(teams, \"teamssssssss\");\n  useEffect(async () => {}, []);\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"alliance\",\n    ref: drop,\n    children: teams.map(team => {\n      console.log(team, \"222222222222\");\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Alliance, \"qnG+gXTNke131kmDyW2upLFTY5U=\", false, function () {\n  return [useDrop];\n});\n\n_c = Alliance;\nexport default Alliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alliance\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Alliance.js"],"names":["React","useEffect","useDrop","addTeamToAlliance","getTeamBelongToThisAlliance","List","ListItem","ListItemText","ListItemAvatar","Avatar","alliances","Alliance","props","isOver","drop","accept","item","team","alliance","teams","JSON","parse","localStorage","getItem","id","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,2BAAT,QAA4C,2BAA5C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBZ,OAAO,CAAC,OAAO;AACxCa,IAAAA,MAAM,EAAE,MADgC;AAExCD,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACdb,MAAAA,iBAAiB,CAACa,IAAI,CAACC,IAAN,EAAYL,KAAK,CAACM,QAAlB,CAAjB;AACD;AAJuC,GAAP,CAAD,CAAlC;AAMA,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,GAAEX,KAAK,CAACM,QAAN,CAAeM,EAAG,EAA1C,CAAX,KAA4D,EAAxE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmB,cAAnB;AAEAlB,EAAAA,SAAS,CAAC,YAAY,CAAE,CAAf,EAAiB,EAAjB,CAAT;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,GAAG,EAAEa,IAAhC;AAAA,cACGK,KAAK,CAACQ,GAAN,CAAWV,IAAD,IAAU;AACnBQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAAkB,cAAlB;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAlBQN,Q;UACoBT,O;;;KADpBS,Q;AAmBT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { addTeamToAlliance } from \"../helpers/functionallity/teamAlliance\";\r\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport alliances from \"../reducers/alliances\";\r\nfunction Alliance(props) {\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"team\",\r\n    drop: (item) => {\r\n      addTeamToAlliance(item.team, props.alliance);\r\n    },\r\n  }));\r\n  let teams = JSON.parse(localStorage.getItem(`${props.alliance.id}`)) || [];\r\n  console.log(teams, \"teamssssssss\");\r\n\r\n  useEffect(async () => {}, []);\r\n  return (\r\n    <List className=\"alliance\" ref={drop}>\r\n      {teams.map((team) => {\r\n        console.log(team, \"222222222222\");\r\n      })}\r\n    </List>\r\n  );\r\n}\r\nexport default Alliance;\r\n"]},"metadata":{},"sourceType":"module"}