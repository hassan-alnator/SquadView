{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Team.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { useDrop, useDrag } from \"react-dnd\";\nimport { addEmployeeToTeam } from \"../actions/employees\";\nimport { deleteTeam } from \"../actions/teams\";\nimport { useDispatch } from \"react-redux\";\nimport Card from \"@mui/material/Card\";\nimport { Button } from \"@mui/material\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Team(props) {\n  _s();\n\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  const dispatch = useDispatch();\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"employee\",\n    drop: item => {\n      dispatch(addEmployeeToTeam(item.employee, props.team, props.employees));\n    }\n  }));\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: \"team\",\n    item: {\n      team: props.team\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    }),\n    end: (item, monitor) => ({\n      canDrag: console.log(\"Employee Draged\")\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      isFlipped: isFlipped,\n      flipDirection: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: drop,\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"team\",\n          ref: drag,\n          style: {\n            marginBottom: \"20px\",\n            backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n            borderRadius: \"20px\",\n            marginRight: \"10px\",\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: props.team.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              position: \"absolute\",\n              bottom: 0,\n              right: 2,\n              opacity: 0.3,\n              color: \"red\"\n            },\n            onClick: () => {\n              dispatch(deleteTeam(props.team, props.teams));\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteTwoToneIcon, {\n              style: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          display: \"inline\"\n        },\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          children: props.team.employees.length === 0 ? \"No Employees Here\" : props.team.employees.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(CardHeader, {\n                style: {\n                  display: \"flex\"\n                },\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: e[\"Avatar\"][\"url\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Team, \"Es7UMWNb+QYeozlWav8lSU9Fcfo=\", false, function () {\n  return [useDispatch, useDrop, useDrag];\n});\n\n_c = Team;\nexport default Team;\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Team.js"],"names":["React","useState","ReactCardFlip","useDrop","useDrag","addEmployeeToTeam","deleteTeam","useDispatch","Card","Button","CardHeader","DeleteTwoToneIcon","Avatar","Team","props","isFlipped","setIsFlipped","handleClick","dispatch","isOver","drop","accept","item","employee","team","employees","isDragging","drag","type","collect","monitor","end","canDrag","console","log","marginBottom","backgroundColor","borderRadius","marginRight","display","flexDirection","Name","position","bottom","right","opacity","color","teams","flexWrap","length","map","e","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { addEmployeeToTeam } from \"../actions/employees\";\r\nimport { deleteTeam } from \"../actions/teams\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { Button } from \"@mui/material\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\nfunction Team(props) {\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"employee\",\r\n    drop: (item) => {\r\n      dispatch(addEmployeeToTeam(item.employee, props.team, props.employees));\r\n    },\r\n  }));\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: \"team\",\r\n    item: { team: props.team },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n    end: (item, monitor) => ({\r\n      canDrag: console.log(\"Employee Draged\"),\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n        <div ref={drop} onClick={handleClick}>\r\n          <Card\r\n            className=\"team\"\r\n            ref={drag}\r\n            style={{\r\n              marginBottom: \"20px\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n              borderRadius: \"20px\",\r\n              marginRight: \"10px\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <CardHeader title={props.team.Name} />\r\n            <Button\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                right: 2,\r\n                opacity: 0.3,\r\n                color: \"red\",\r\n              }}\r\n              onClick={() => {\r\n                dispatch(deleteTeam(props.team, props.teams));\r\n              }}\r\n            >\r\n              <DeleteTwoToneIcon\r\n                style={{\r\n                  color: \"red\",\r\n                }}\r\n              />\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n\r\n        <Card\r\n          style={{\r\n            display: \"inline\",\r\n          }}\r\n          onClick={handleClick}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            {props.team.employees.length === 0\r\n              ? \"No Employees Here\"\r\n              : props.team.employees.map((e) => {\r\n                  return (\r\n                    <div key={e.id}>\r\n                      <CardHeader\r\n                        style={{ display: \"flex\" }}\r\n                        avatar={<Avatar src={e[\"Avatar\"][\"url\"]} />}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n          </div>\r\n        </Card>\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Team;\r\n"]},"metadata":{},"sourceType":"module"}