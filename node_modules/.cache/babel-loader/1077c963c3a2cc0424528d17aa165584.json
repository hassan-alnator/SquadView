{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Team.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport drop from \"./DragDrop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Team({\n  team: team\n}) {\n  _s();\n\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"employee\",\n    collect: (monitor, props) => ({\n      isOver: !!monitor.isOver()\n    }),\n    drop: e => addImageToBoard(e)\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: \"team\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", team.Name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, team.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Team, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", true);\n\n_c = Team;\nexport default Team;\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Team.js"],"names":["React","drop","Team","team","isOver","useDrop","accept","collect","monitor","props","e","addImageToBoard","Name","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAI,EAAEA;AAAR,CAAd,EAA8B;AAAA;;AAC5B,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaH,IAAb,IAAqBI,OAAO,CAAC,OAAO;AACxCC,IAAAA,MAAM,EAAE,UADgC;AAExCC,IAAAA,OAAO,EAAE,CAACC,OAAD,EAAUC,KAAV,MAAqB;AAC5BL,MAAAA,MAAM,EAAE,CAAC,CAACI,OAAO,CAACJ,MAAR;AADkB,KAArB,CAF+B;AAKxCH,IAAAA,IAAI,EAAGS,CAAD,IAAOC,eAAe,CAACD,CAAD;AALY,GAAP,CAAD,CAAlC;AAOA,sBACE;AAAK,IAAA,GAAG,EAAET,IAAV;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAA,2BACE;AAAA,sBAAOE,IAAI,CAACS,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAsCT,IAAI,CAACU,EAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAbQX,I;;KAAAA,I;AAeT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport drop from \"./DragDrop\";\r\nfunction Team({ team: team }) {\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"employee\",\r\n    collect: (monitor, props) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n    drop: (e) => addImageToBoard(e),\r\n  }));\r\n  return (\r\n    <div ref={drop} className=\"team\" key={team.id}>\r\n      <div> {team.Name} </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Team;\r\n"]},"metadata":{},"sourceType":"module"}