{"ast":null,"code":"import * as helaperApi from \"../Api/helperApis.js\";\nexport const addEmployeeToTeam = async (employee, team, employees, teams) => {\n  try {\n    const employeeUpdated = await helaperApi.addEmployeeToTeam(employee, team);\n    var employeesUpdated = employees.filter(e => e.id !== employee.id);\n    var teamsUpdated = teams.filter(t => t.id !== team.id);\n    team = team.employees.concat(employeeUpdated);\n    teamsUpdated = teamsUpdated.concat(team);\n    console.log(teamsUpdated, \"teamsUpdated\");\n    employeesUpdated = employeesUpdated.concat(employeeUpdated);\n    console.log(employeesUpdated, \"employeesUpdated\");\n    return [employeesUpdated, teamsUpdated];\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/helpers/functionallity/updateEmployee.js"],"names":["helaperApi","addEmployeeToTeam","employee","team","employees","teams","employeeUpdated","employeesUpdated","filter","e","id","teamsUpdated","t","concat","console","log","err"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,sBAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,KAA4C;AAC3E,MAAI;AACF,UAAMC,eAAe,GAAG,MAAMN,UAAU,CAACC,iBAAX,CAA6BC,QAA7B,EAAuCC,IAAvC,CAA9B;AACA,QAAII,gBAAgB,GAAGH,SAAS,CAACI,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,QAAQ,CAACQ,EAA1C,CAAvB;AACA,QAAIC,YAAY,GAAGN,KAAK,CAACG,MAAN,CAAcI,CAAD,IAAOA,CAAC,CAACF,EAAF,KAASP,IAAI,CAACO,EAAlC,CAAnB;AACAP,IAAAA,IAAI,GAAGA,IAAI,CAACC,SAAL,CAAeS,MAAf,CAAsBP,eAAtB,CAAP;AACAK,IAAAA,YAAY,GAAGA,YAAY,CAACE,MAAb,CAAoBV,IAApB,CAAf;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ,EAA0B,cAA1B;AAEAJ,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACM,MAAjB,CAAwBP,eAAxB,CAAnB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,gBAAZ,EAA8B,kBAA9B;AACA,WAAO,CAACA,gBAAD,EAAmBI,YAAnB,CAAP;AACD,GAXD,CAWE,OAAOK,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,CAfM","sourcesContent":["import * as helaperApi from \"../Api/helperApis.js\";\r\n\r\nexport const addEmployeeToTeam = async (employee, team, employees, teams) => {\r\n  try {\r\n    const employeeUpdated = await helaperApi.addEmployeeToTeam(employee, team);\r\n    var employeesUpdated = employees.filter((e) => e.id !== employee.id);\r\n    var teamsUpdated = teams.filter((t) => t.id !== team.id);\r\n    team = team.employees.concat(employeeUpdated);\r\n    teamsUpdated = teamsUpdated.concat(team);\r\n    console.log(teamsUpdated, \"teamsUpdated\");\r\n\r\n    employeesUpdated = employeesUpdated.concat(employeeUpdated);\r\n    console.log(employeesUpdated, \"employeesUpdated\");\r\n    return [employeesUpdated, teamsUpdated];\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}