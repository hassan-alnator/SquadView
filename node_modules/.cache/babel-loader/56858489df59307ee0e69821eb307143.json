{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salaqaily\\\\Desktop\\\\New folder\\\\allocation_widget\\\\src\\\\components\\\\Alliance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDrop, useDrag } from \"react-dnd\";\nimport { addTeamToAlliance } from \"../actions/teams\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport store from \"../index\";\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis.js\";\nimport { useDispatch } from \"react-redux\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Card from \"@mui/material/Card\";\nimport Slider from \"react-slick\";\nimport { Container, Col } from \"react-bootstrap\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TeamInAlliance from \"./TeamInAlliance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alliance(props) {\n  _s();\n\n  var settings = {\n    dots: true,\n    infinite: false,\n    speed: 200,\n    slidesToShow: 4,\n    slidesToScroll: 1\n  };\n  const dispatch = useDispatch();\n  const [teams, setTeams] = useState(props.teams);\n  useEffect(async () => {\n    try {\n      setTeams(await getTeamBelongToThisAlliance(props.alliance));\n    } catch (err) {\n      console.log(err);\n    }\n  }, [teams]);\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"team\",\n    drop: item => {\n      dispatch(addTeamToAlliance(item.team, props.alliance, teams));\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    ref: drop,\n    style: {\n      backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n      borderRadius: \"20px\",\n      display: \"flex\"\n    },\n    children: [props.alliance.Name, /*#__PURE__*/_jsxDEV(Container, {\n      className: \"Container\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        className: \"employees\",\n        ...settings,\n        children: teams.map(team => {\n          return /*#__PURE__*/_jsxDEV(TeamInAlliance, {\n            team: team,\n            teams: teams\n          }, team.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Alliance, \"UU1xKzOfi2013q6vdDkOCjiTNUA=\", false, function () {\n  return [useDispatch, useDrop];\n});\n\n_c = Alliance;\nexport default Alliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alliance\");","map":{"version":3,"sources":["C:/Users/salaqaily/Desktop/New folder/allocation_widget/src/components/Alliance.js"],"names":["React","useEffect","useState","useDrop","useDrag","addTeamToAlliance","List","ListItem","store","getTeamBelongToThisAlliance","useDispatch","CardHeader","Card","Slider","Container","Col","TeamInAlliance","Alliance","props","settings","dots","infinite","speed","slidesToShow","slidesToScroll","dispatch","teams","setTeams","alliance","err","console","log","isOver","drop","accept","item","team","backgroundColor","borderRadius","display","Name","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,2BAAT,QAA4C,8BAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,MAAIC,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,KAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE;AALH,GAAf;AAOA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAACgB,KAAK,CAACQ,KAAP,CAAlC;AAEAzB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI;AACF0B,MAAAA,QAAQ,CAAC,MAAMlB,2BAA2B,CAACS,KAAK,CAACU,QAAP,CAAlC,CAAR;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GANQ,EAMN,CAACH,KAAD,CANM,CAAT;AAQA,QAAM,CAAC;AAAEM,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqB9B,OAAO,CAAC,OAAO;AACxC+B,IAAAA,MAAM,EAAE,MADgC;AAExCD,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACdV,MAAAA,QAAQ,CAACpB,iBAAiB,CAAC8B,IAAI,CAACC,IAAN,EAAYlB,KAAK,CAACU,QAAlB,EAA4BF,KAA5B,CAAlB,CAAR;AACD;AAJuC,GAAP,CAAD,CAAlC;AAOA,sBACE,QAAC,IAAD;AACE,IAAA,GAAG,EAAEO,IADP;AAEE,IAAA,KAAK,EAAE;AACLI,MAAAA,eAAe,EAAE,0BADZ;AAELC,MAAAA,YAAY,EAAE,MAFT;AAGLC,MAAAA,OAAO,EAAE;AAHJ,KAFT;AAAA,eAQGrB,KAAK,CAACU,QAAN,CAAeY,IARlB,eAUE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA,WAAkCrB,QAAlC;AAAA,kBACGO,KAAK,CAACe,GAAN,CAAWL,IAAD,IAAU;AACnB,8BAAO,QAAC,cAAD;AAA8B,YAAA,IAAI,EAAEA,IAApC;AAA0C,YAAA,KAAK,EAAEV;AAAjD,aAAqBU,IAAI,CAACM,EAA1B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA9CQzB,Q;UAQUP,W,EAWUP,O;;;KAnBpBc,Q;AAgDT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { addTeamToAlliance } from \"../actions/teams\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport store from \"../index\";\r\nimport { getTeamBelongToThisAlliance } from \"../helpers/Api/helperApis.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Slider from \"react-slick\";\r\nimport { Container, Col } from \"react-bootstrap\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TeamInAlliance from \"./TeamInAlliance\";\r\nfunction Alliance(props) {\r\n  var settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 200,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n  };\r\n  const dispatch = useDispatch();\r\n  const [teams, setTeams] = useState(props.teams);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      setTeams(await getTeamBelongToThisAlliance(props.alliance));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [teams]);\r\n\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: \"team\",\r\n    drop: (item) => {\r\n      dispatch(addTeamToAlliance(item.team, props.alliance, teams));\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Card\r\n      ref={drop}\r\n      style={{\r\n        backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n        borderRadius: \"20px\",\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {props.alliance.Name}\r\n\r\n      <Container className=\"Container\">\r\n        <Slider className=\"employees\" {...settings}>\r\n          {teams.map((team) => {\r\n            return <TeamInAlliance key={team.id} team={team} teams={teams} />;\r\n          })}\r\n        </Slider>\r\n      </Container>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Alliance;\r\n"]},"metadata":{},"sourceType":"module"}